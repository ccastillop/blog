-- MySQL dump 10.11
--
-- Host: localhost    Database: ccp
-- ------------------------------------------------------
-- Server version	5.0.51a-24+lenny4

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `categorias`
--

DROP TABLE IF EXISTS `categorias`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `categorias` (
  `id` int(11) NOT NULL auto_increment,
  `nombre` varchar(255) default NULL,
  `user_id` int(11) default NULL,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  `menu` tinyint(1) default '0',
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `categorias`
--

LOCK TABLES `categorias` WRITE;
/*!40000 ALTER TABLE `categorias` DISABLE KEYS */;
INSERT INTO `categorias` VALUES (1,'Acerca de',3,'2010-01-31 06:48:42','2010-02-05 21:26:15',1),(2,'Portafolio',3,'2010-02-05 21:26:27','2010-02-05 21:26:27',1),(3,'Programación',3,'2010-02-05 21:26:41','2010-02-05 21:26:41',0),(4,'Estrategia',3,'2010-02-05 21:27:14','2010-02-05 21:27:14',0),(5,'Arquitectura',3,'2010-02-05 21:27:21','2010-02-05 21:27:21',0),(6,'Aplicaciones',3,'2010-02-14 20:45:20','2010-02-14 20:45:40',0);
/*!40000 ALTER TABLE `categorias` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comentarios`
--

DROP TABLE IF EXISTS `comentarios`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `comentarios` (
  `id` int(11) NOT NULL auto_increment,
  `texto` text,
  `nombre` varchar(255) default NULL,
  `email` varchar(255) default NULL,
  `web` varchar(255) default NULL,
  `user_id` int(11) default NULL,
  `post_id` int(11) default NULL,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `comentarios`
--

LOCK TABLES `comentarios` WRITE;
/*!40000 ALTER TABLE `comentarios` DISABLE KEYS */;
INSERT INTO `comentarios` VALUES (1,'Este es un comentario de prueba. Es para ver si se puede comentar o no.\r\n\r\nEste blog es lo máaaaximo','Cristian','ccastillop@gmail.com','',NULL,1,'2010-02-05 21:44:07','2010-02-05 22:34:36'),(2,'O sea haces el blog sólo para saber cómo se hace y si puedes hacerlo. Me parece válido. \r\n\r\nYo no lo desarrollaría, pero si chequearía cómo se hace para el día que realmente lo necesite, es decir, cuándo alguien me pague por el blog. \r\n\r\nTal vez suena mal lo que dije, pero piénsalo. Hay miles de cosas por investigar y hacer. Estoy seguro que de esas miles, hay muchísimas que te gustaría hacer. De esas muchísimas hay bastantes por las cuales alguien te pagaría. \r\n\r\nComo no podemos hacer todo, entonces porqué no hacer las que nos gusten y que además nos paguen. Luego, cuando ya hemos hecho bastante billete y no sabemos cómo gastarlo y tenemos harto tiempo libre, hacemos las otras que también nos gustan pero que nadie nos paga.\r\n\r\nPD: Por fa cambia el tipo de letra de este blog o al menos quita las negritas. Se me hace fastidioso leer así.','Sergio','sergiohidalgocaceres@gmail.com','http://elplacerdecomerrico.blogspot.com',NULL,1,'2010-02-05 22:50:25','2010-02-05 22:50:25'),(3,'Muchas interrogantes:\r\nPor qué la etiqueta arquitectura?\r\nPor qué las opciones de inicio de sesión y de registro?\r\nPor qué no es un blog más?\r\nPor qué los hombres malheridos? (je, esto último fue un aporte del bodrio de Jose Luis Perales :D)','Pedro Chacón','pedro.chacon@pucp.edu.pe','',NULL,1,'2010-02-09 17:33:05','2010-02-09 17:33:05'),(4,'Lo maximo ¡¡¡¡ Esta super tu encuesta.','Betty ','a20085503@pucp.edu.pe','',NULL,4,'2010-02-18 15:22:07','2010-02-18 15:22:07'),(5,'Que opinas de JOOMLA ????','Sergio','sergio.ceo@gmail.com','',NULL,1,'2010-06-15 18:55:36','2010-06-15 18:55:36'),(6,'Buen articulo hermano.. en la revista del mes pasado de Rails, viene un buen articulo sobre RVM.. Saludos.','Alex','alexs1010@gmail.com','',NULL,10,'2010-09-02 00:00:20','2010-09-02 00:00:20'),(7,'calatas o con ropa','el probador','elprobador@gmail.com','',NULL,1,'2010-09-06 22:53:45','2010-09-06 22:53:45');
/*!40000 ALTER TABLE `comentarios` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contactos`
--

DROP TABLE IF EXISTS `contactos`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `contactos` (
  `id` int(11) NOT NULL auto_increment,
  `nombre` varchar(255) default NULL,
  `email` varchar(255) default NULL,
  `texto` text,
  `user_id` int(11) default NULL,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `contactos`
--

LOCK TABLES `contactos` WRITE;
/*!40000 ALTER TABLE `contactos` DISABLE KEYS */;
INSERT INTO `contactos` VALUES (1,'Prueba de contact','ccastillo@apoyopublicaciones.com','Prueba',NULL,'2010-01-31 19:14:12','2010-01-31 19:14:12'),(2,'Rodolfo Lay','rodolfolay@hotmail.com','Buen dia, estuve buscando la forma de integrar unos programas que tengo en VFP y macros de excel a la intranet y aprendi PHP, hize algunas cosas, nada nuevo para ustedes sin duda, pero investigue sobre Ruby on Rails y estoy interesado en aprenderlo. Yo he sido siempre autodidacta y me gusta la programación, eso si es un reto. \r\n\r\nMe tope con su publicación donde daban luz verde a un seminario en la USMP y según leo están en eso, me agradaria poder participar y enterarme de esta tecnologia. Deseo aprender sobre estos FrameWorks, y la verdad es que me habia metido en ExtJs, pero me llamó la atención Ruby on Rails y por eso me atrevi a escribir, esepro poder obtener respuestas positivas de esto.\r\n\r\nMuchas Gracias.\r\n\r\nRodolfo Lay.',NULL,'2010-03-23 14:08:46','2010-03-23 14:08:46'),(3,'pene','pene@pijita.com','jajaj ptm hasta el pincho tu web te pueden meter spam por todos sitios',NULL,'2010-05-04 04:28:15','2010-05-04 04:28:15'),(4,'Heriberto Linares','heriberto_linares@tecknologistic.com','Hola Cristian,\r\n\r\nTrabajamos hace muuchos años algunas aplicaciones en el tiempo que estuve en Mobil. Estuve tratando de ubicarte para reunirnos y hacerte algunas consultas ya que tengo una empresa propia ahora.\r\n\r\nMi cel. es 992 623 597. y mi correo ya lo tienes.\r\n\r\nMe avisas.\r\n\r\nUn abrazo, \r\n\r\nHeriberto Linares',NULL,'2010-05-06 16:28:42','2010-05-06 16:28:42'),(5,'oskar suan','ok_suan15@hotmail.com','Buenos dias, soy estuduinate y realizo una investigacion sobre los sistemas de informacion en las empresas de produccion, seria muy util para mi si me pudioieran suministrar informacion de alguna consultoria que hubieran podido realizar en una empresa de produccion,como se encontraba la emprersa antes de implementar IT el diagnostico con los procesos y que implementaron.\r\n\r\nagradezco su colaboracion y aclaro que es una investigacion a nivel pedagojico.... cualquier informacion me es de mucha utilidad.\r\n',NULL,'2010-05-28 16:31:41','2010-05-28 16:31:41'),(6,'Marlene Manley','martinbabcocksss@gmail.com','We will optimize your site to increase its rankings with major search engines. This will drive targeted online users to your site, as well as attract new users through the use of relevant keywords and phrases. Not only will we help you gain those higher rankings, but maintain your status through continual management and support. Please reply to this email so we can send you more details.\r\n',NULL,'2010-06-14 06:13:03','2010-06-14 06:13:03'),(7,'Cesar Quinto','cquintop@yahoo.com','Hola Cristian, soy Cesar Quinto de la Catolica...espero que te acuerdes de mi. Que ha sido de tu vida? me entere de ti por la web de casadeplaya.com.........saludos, Cesar.',NULL,'2010-06-14 16:57:02','2010-06-14 16:57:02'),(8,'WwTGFpH','zsnyfm@octssa.com','WwTGFpH',NULL,'2010-07-24 07:04:24','2010-07-24 07:04:24'),(9,'CPVsTwr','kytsue@aykasa.com','CPVsTwr',NULL,'2010-07-24 10:23:21','2010-07-24 10:23:21'),(10,'xRMWSfwO http://cbudgd.com/ <a href=\"http://meytnl.com/ \">ZuWuoXK</a> [url=http://slzeib.com/]ZuWuoXK[/url]','eqzkpy@xurbim.com','xRMWSfwO http://cbudgd.com/ <a href=\"http://meytnl.com/ \">ZuWuoXK</a> [url=http://slzeib.com/]ZuWuoXK[/url]',NULL,'2010-07-31 16:42:04','2010-07-31 16:42:04'),(11,'YoIjYhb http://eeuxnz.com/ <a href=\"http://zodawt.com/ \">ZJWnElV</a> [url=http://ckrxom.com/]ZJWnElV[/url]','lvxrdj@lhcgue.com','YoIjYhb http://eeuxnz.com/ <a href=\"http://zodawt.com/ \">ZJWnElV</a> [url=http://ckrxom.com/]ZJWnElV[/url]',NULL,'2010-07-31 18:08:01','2010-07-31 18:08:01'),(12,'Jaime Jacob','jesseholden1@gmail.com','What would a huge increase in relevant traffic mean for your business?  If I could greatly increase the amount of customers who are interested in your products and services, wouldn\'t you be interested.\r\n',NULL,'2010-11-10 16:48:06','2010-11-10 16:48:06'),(13,'Cecelia Maloney','ceceliamaloney.003@gmail.com','We are interested to increase traffic to your website, please get back to us in order to discuss the possibility in further detail.\r\n',NULL,'2010-11-15 22:27:27','2010-11-15 22:27:27'),(14,'Brooke Babcock','bellagarza25@gmail.com','We strongly believe that we have an excellent opportunity to increase the number of visitors to your website through our white-hat SEO services. Please simply reply to this message and we will be delighted to send you further information.\r\n',NULL,'2010-12-02 18:02:48','2010-12-02 18:02:48'),(15,'Gianmarco Passalacqua','gianmarco@dreamstaffing.com','Hi Cristian,\r\n\r\nI found your profile while looking for Ruby on Rails developers through the internet as we are constantly looking for talented Ruby on Rails developers to work with us and with our clients.\r\n\r\nThe successful candidate will work directly with the client, so excellent English is a must. We will have many future projects for the person that does well.\r\n\r\nPlease if you are interested send me an email with your resume in English and desired hourly rate to gianmarco@dreamstaffing.com or contact me through Skype at gpc104 in order to get started with our evaluation process.\r\n\r\nThanks a lot and I look forward to hearing back from you soon.\r\n\r\nBest regards,\r\n\r\nGianmarco Passalacqua\r\n\r\nDirector of Human Resources\r\nDream Staffing LLC\r\nwww.dreamstaffing.com\r\ngianmarco@dreamstaffing.com',NULL,'2010-12-09 17:01:33','2010-12-09 17:01:33'),(16,'Randall Tuttle','RachelleHolloway0007@gmail.com','We noticed that you are not at the top of the search engines for a number of your key terms. We have helped companies similar to yours to achieve top organic rankings. Please reply to this message and we will prepare a special proposal for you, to show you how we can achieve similar results for you.\r\n',NULL,'2010-12-17 21:38:11','2010-12-17 21:38:11'),(17,'Jaime Jack','jackwalker741@gmail.com','We noticed that you are not at the top of the search engines for a number of your key terms. We have helped companies similar to yours to achieve top organic rankings. Please reply to this message and we will prepare a special proposal for you, to show you how we can achieve similar results for you.\r\n',NULL,'2011-01-14 21:43:06','2011-01-14 21:43:06'),(18,'Jaime Jacob','jesseholden117@gmail.com','What would a huge increase in relevant traffic mean for your business?  If I could greatly increase the amount of customers who are interested in your products and services, wouldn\'t you be interested.\r\n',NULL,'2011-01-31 19:50:38','2011-01-31 19:50:38'),(19,'Jaime Jacob','jesseholden117@gmail.com','What would a huge increase in relevant traffic mean for your business?  If I could greatly increase the amount of customers who are interested in your products and services, wouldn\'t you be interested.\r\n',NULL,'2011-01-31 20:23:53','2011-01-31 20:23:53'),(20,'Cecelia Maloney','ceceliamaloney21@gmail.com','We are interested to increase traffic to your website, please get back to us in order to discuss the possibility in further detail.\r\n',NULL,'2011-02-15 22:31:01','2011-02-15 22:31:01'),(21,'Carlos','ringo_pe@yahoo.com','Parecen interesantes algunas de tus entradas pero no se pueden leer, sale error.',NULL,'2011-03-31 05:26:45','2011-03-31 05:26:45');
/*!40000 ALTER TABLE `contactos` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `figuras`
--

DROP TABLE IF EXISTS `figuras`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `figuras` (
  `id` int(11) NOT NULL auto_increment,
  `nombre` varchar(255) default NULL,
  `descripcion` text,
  `orden` int(11) default NULL,
  `img_file_name` varchar(255) default NULL,
  `img_content_type` varchar(255) default NULL,
  `img_file_size` int(11) default NULL,
  `user_id` int(11) default NULL,
  `post_id` int(11) default NULL,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_figuras_on_user_id` (`user_id`),
  KEY `index_figuras_on_post_id` (`post_id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `figuras`
--

LOCK TABLES `figuras` WRITE;
/*!40000 ALTER TABLE `figuras` DISABLE KEYS */;
INSERT INTO `figuras` VALUES (1,'SE.com, articulos','Listado paginado de artículos para la administración de contenidos',NULL,'Imagen_2.png','image/png',143828,3,2,'2010-05-12 20:50:03','2010-05-12 20:50:03'),(2,'SE.com, editor de contenidos','',NULL,'Imagen_4.png','image/png',200940,3,2,'2010-05-12 20:50:54','2010-05-12 20:50:54'),(3,'SE.com, progreso del envío','Vista que muestra cómo va avanzando el envío del boletín, cuánto tiempo resta y con opciones para detener el envío o reiniciarlo',NULL,'Imagen_5.png','image/png',182433,3,2,'2010-05-12 20:53:33','2010-05-12 20:53:33'),(4,'SE.com home','Nótese cómo se despliegan las noticias cortas mediante Ajax. También se usan en comentarios y en votaciones.',NULL,'Imagen_6.png','image/png',458851,3,2,'2010-05-12 20:57:13','2010-05-12 20:57:13'),(5,'Casadeplaya.com','Homepage',NULL,'Imagen_7.png','image/png',559256,3,2,'2010-05-12 20:58:50','2010-05-12 20:58:50'),(6,'Casadeplaya.com, Zona del usuario','Permite crear inmuebles, realizar pagos, subir fotos, y modificar la información de contactos.\r\n\r\nEn modo Administrador permite acceso todo usuario y permite el mantenimiento de órdenes y pagos.',NULL,'Imagen_8.png','image/png',330817,3,2,'2010-05-12 21:00:52','2010-05-12 21:00:52'),(7,'Casadeplaya.com administrador de inmuebles','Permite al usuario el modificar los datos de sus avisos, agregar fotos, ver cuantos contactos ha recibido y realizar pagos.',NULL,'Imagen_9.png','image/png',369144,3,2,'2010-05-12 21:02:42','2010-05-12 21:02:42'),(8,'Casadeplaya.com, editor de datos del inmueble','Permite mantener los datos del inmueble, precios y caracteristicas',NULL,'Imagen_10.png','image/png',216581,3,2,'2010-05-12 21:03:06','2010-05-12 21:03:06'),(9,'Casadeplaya.com fotos','Permite agregar fotos, ordenarlas y modificarlas',NULL,'Imagen_11.png','image/png',281262,3,2,'2010-05-12 21:03:56','2010-05-12 21:03:56'),(10,'Casadeplaya.com, pagos en linea','Permite al usuario el realizar pagos utilizando la pasarela 2Checkout.com',NULL,'Imagen_12.png','image/png',357408,3,2,'2010-05-12 21:05:30','2010-05-12 21:05:30'),(11,'Estiloapa.com, editor de contenidos','Este sitio web permite crear documentos como Tesis y Trabajos, en formato APA y exportados en PDF.\r\n\r\nAquí una vista del editor de contenidos',NULL,'Imagen_15.png','image/png',191391,3,2,'2010-05-12 21:06:16','2010-05-12 21:06:16'),(12,'Petroaudios.semanaeconomica.com','Vista de una de las paginas con detalles de los personajes que participaron en el suceso',NULL,'Imagen_17.png','image/png',202906,3,2,'2010-05-12 21:06:56','2010-05-12 21:06:56'),(13,'Enviador de boletines masivo','Un sistema que permite enviar boletines en formato HTML a una base de datos previamente establecida.',NULL,'Imagen_19.png','image/png',139674,3,2,'2010-05-12 21:07:37','2010-05-12 21:07:37'),(14,'Codigo compartido del Blog','El código fuente de este blog puede ser encontrado en Github:\r\n\r\nhttp://github.com/znexus/blog',NULL,'Imagen_21.png','image/png',119359,3,2,'2010-05-12 21:10:54','2010-05-12 21:10:54'),(15,'Enviador Emails Masivos','Vista del editor de contenidos. Nótese la personalización de envíos',NULL,'Imagen_1.png','image/png',154093,3,7,'2010-05-24 21:00:53','2010-05-24 21:00:53'),(16,'Enviador. Código fuente','Controlladora de Promomails con el proceso de envío',NULL,'Imagen_2.png','image/png',211675,3,7,'2010-05-24 21:07:26','2010-05-24 21:07:26'),(17,'Vista de la cronología de Petroaudios','',NULL,'Imagen_3.png','image/png',132525,3,7,'2010-05-24 21:34:16','2010-05-24 21:34:16'),(18,'Extracto del código Raphaël','',NULL,'Imagen_4.png','image/png',281062,3,7,'2010-05-24 21:36:59','2010-05-24 21:36:59'),(19,'Innovation DNA','',NULL,'Imagen_5.png','image/png',265711,3,7,'2010-05-24 21:58:26','2010-05-24 21:58:26'),(20,'Union-street.de','',NULL,'Imagen_6.png','image/png',255937,3,7,'2010-05-24 22:08:06','2010-05-24 22:08:06'),(21,'Homepage de Larpwriter.com','',NULL,'Imagen_7.png','image/png',172006,3,7,'2010-05-24 22:33:23','2010-05-24 22:33:23');
/*!40000 ALTER TABLE `figuras` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `posts` (
  `id` int(11) NOT NULL auto_increment,
  `titulo` varchar(255) default NULL,
  `resumen` varchar(255) default NULL,
  `texto` text,
  `user_id` int(11) default NULL,
  `categoria_id` int(11) default NULL,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES (1,'Sobre este blog','\"En casa de herrero cuchillo de palo\": un acercamiento a la (sin-)razón de este blog','Bien, para los despistados (o mejor aún, nuevos visitantes) soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comencé con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\r\n\r\nComencé a escribir en [Blogpuntocom][2], mi primer blog, en el 2006. Utilicé wordpress. Luego, escribía para mi empresa en [Z-nexus][3]. Utilicé Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decidí armarme de valor y escribir mi propio blog.\r\n\r\nNótese que \"escribir mi propio blog\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicación web. Y claro, medio mundo dirá: pero tanta herramienta, tanto wordpress, tanto blogspot y por qué tanta hora en programar desde cero!\r\nFácil: me gusta hacerlo!\r\n\r\nSi les gusta los detalles y eres fanático de Ruby on Rails (porque vamos, no mientan, es casi una religión) podrás ver el código fuente de la aplicación en [GitHub][4]\r\n\r\n  [1]: http://rubyonrails.org \"Ruby on Rails, la web más facil\"\r\n  [2]: http://blogpuntocom.com \"Blogpuntocom.com\"\r\n  [3]: http://z-nexus.com \"Z-nexus\"\r\n  [4]: http://github.com/znexus/blog \"Repositorio del código de este blog\"',3,1,'2010-01-31 06:49:00','2010-02-05 21:28:54'),(2,'Pantallas de sitios web y backoffice','Desarrollos propios y para otras empresas','\r\n\r\nfigura_4\r\n\r\nfigura_5\r\n\r\nfigura_6\r\n\r\nfigura_7\r\n\r\nfigura_8\r\n\r\nfigura_9\r\n\r\nfigura_10\r\n\r\nfigura_11\r\n\r\nfigura_12\r\n\r\n ',3,2,'2010-02-05 22:36:52','2010-07-20 15:18:18'),(3,'Mis estudios','Quemé pestañas y pagué por ello','Aquí una breve lista de lo que he estudiado:\r\n\r\n##Pontificia Universidad Católica del Perú\r\n\r\nBachiller en Ingeniería Electrónica',3,1,'2010-02-15 21:53:45','2010-02-15 21:53:45'),(4,'Encuestas online','Las encuestas Online pueden mejorar tu vida.','Esto es para mis compañeros del MBA de Centrum. \r\n\r\nLes acabo de enviar la encuesta sobre actitud de uso de los medios de búsqueda de inmuebles y cómo se produce el proceso de compra.\r\n\r\nEs una encuesta sencilla hecha con [Lime Survey][1]\r\n\r\nLo bacán de este servicio es que la encuesta se ejecuta en Internet, acumula las respuestas y entrega los resultados tabulados y listos para procesar. También tiene un exportador que gerena los cuadros y diagramas que explican los resultados.\r\n\r\n[1]: http://limesurvey.org',3,6,'2010-02-18 15:15:14','2010-02-18 15:17:11'),(5,'HTML5 y el IPOD IPAD','De cómo Apple está impulsando el uso de HTML5 y el futuro de Flash','Bien,\r\n\r\nAhora estoy viendo algunos videos (no todos) en Safari de Apple. Y están en HTML5. Son una mezcla de un objeto javascript con controles del video y que muestra el video en un cuadro similar al antiguo Flash.\r\n\r\n¿Antiguo Flash? ¿Es el fin de Flash?. Quizá el uso masivo de Flash se debe al Video (mejor dicho, a Youtube.com) y no tanto a excelentes juegos en línea como los que se ven en Facebook. Y es el Video el motivador del cambio, la fuerza impulsora: no podemos ver muchos videos en línea en el Ipod a menos que sean por Youtube, y la verdadera experiencia de ver Videos la ha traido, sin lugar a dudas, Youtube.\r\n\r\n¿Es la renovación de HTML5 una amenaza a la vida de Flash? Yo creo que sí. Canvas es la tecnología que viene en HTML5 y que promete animaciones, interactividad y el poder manejar videos y audios. Eso hace a Flash inutil. Es software cerrado (Flash) versus un estandar abierto (html5) la amenaza y más bien una debilidad de Flash.\r\n\r\nPero va a pasar \"mucho tiempo\". Aunque en Tecnologías, mucho tiempo es un año. ¿Qué debe hacer Flash?, es sencilla la solución: abrir sus componentes. \r\n\r\n',3,4,'2010-03-27 22:20:30','2010-03-27 22:25:05'),(6,'Spam','Ahora he limpiado el Blog, y he puesto un antiSPAM','Esto para evitar que me llenen el blog con comentarios como compre viagra o cosas asi.\r\n\r\nUtilicé la gema http://github.com/hiddenloop/acts_as_textcaptcha',3,3,'2010-05-05 09:42:33','2010-05-05 09:42:33'),(7,'Problemas / solución','','<hr>\r\n\r\n## Cristian Castillo\r\n\r\n*Problema:*\r\n\r\nUna infografía debe explicar la sucesión de eventos del escándalo de los Petroaudios. De ser visible en equipos móviles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\r\n\r\nfigura_17\r\n[Cronología Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\r\n\r\n*Solución:*\r\n\r\n- Se utilizó la biblioteca [Raphaël](http://raphaeljs.com/) para la generación de gráficas y la interactividad\r\n- Ruby on Rails y Jquery para el ingreso y manejo de la información.\r\n\r\nAlgo del código Raphaël: \r\n\r\nfigura_18\r\n\r\n<hr>\r\n\r\n*Problema:* \r\n\r\nUn cliente, administrador de varios productos educativos, revistas y cursos de Administración y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\r\n\r\n- Los emails deben ser en formato HTML, con imágenes, y deben ser sólo a las listas que se determinen para cada evento\r\n- Los emails deben salir del dominio de la empresa que los envía y deben personalizarse por cada cliente\r\n\r\nfigura_15\r\n\r\n*Solución:* \r\n\r\n- Se implementó una aplicación WEB en Ruby on Rails sobre servidor Ubuntu Linux para los envíos.\r\n- El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configuró el servidor para que los envíos no sean filtrados ni considerados como SPAM. Se configuró como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la razón de los rebotes\r\n- El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\r\n- Se utilizó un editor de contenidos y un formato de plantillas para personalizar cada envío.\r\n\r\nfigura_16\r\n\r\n<hr>\r\n\r\n##Peter Baker\r\n\r\n*Problema:*\r\n\r\nEl cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\r\n\r\nfigura_19\r\n\r\n*Solución:*\r\n\r\nSe utilizó [Prototype](http://www.prototypejs.org/) para la interacción y registro de las respuestas. Ruby on Rails para el registro de Resultados.\r\n\r\n<hr>\r\n\r\n*Problema:* \r\n\r\nDesarrollar un portal de música HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\r\n\r\nfigura_20\r\n\r\n\r\n*Solución:*\r\n\r\nDesarrollo en Ruby on Rails. Jquery para las animaciones.\r\n\r\n<h3>\r\n*Otros desarrollos:*\r\n\r\n- [15talents.com]: mercado de trabajo para practicantes y licenciados dirigido al mercado alemán\r\n\r\n- [wahlgetwitter.de]: un *mashup* para las elecciones del 2009 de Alemania\r\n\r\n<hr>\r\n\r\n## Florent Guilleux\r\n\r\n*Problema:*\r\n\r\nImplementar una comunidad de aficionados a la improvisación y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\r\n\r\nfigura_21\r\n\r\n*Solución:*\r\n\r\nDesarrollo de la comunidad en Internet mediante Ruby on Rails.\r\n\r\nSe utilizó [Cucumber](http://cukes.info) para escribir casos de uso y [rSpec](http://rspec.info) para escribir pruebas unitarias.\r\n',3,2,'2010-05-24 17:58:53','2010-05-25 19:22:32'),(8,'Servidor de autenticación OAuth2 (Oauth2 provider)','Debido  a que en mis trabajos cada vez tenemos más aplicaciones web, surge la necesidad de centralizar la autenticación de usuarios para evitar repeticiones y complicaciones, qué mejor que un servidor central basado en OAuth2','Cada vez es más necesario librar al usuario de tener que autenticarse (mandar usuario y contraseña) al momento de acceder a una aplicación web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y sería realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicación.\r\n\r\nEntonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un estándar  que permita centralizar la autenticación y mantener al mínimo el que las claves estén siendo ingresadas. Es la elección de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir información. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\r\n\r\nPlan de acción:\r\n\r\nEl reto aquí está en permitir registrar un usuario en nuestro servidor, ya sea dándolo de alta como nuevo o permitiéndole autenticarse desde Facebook o Twiter. Luego, esa cadena de autenticación (token) se utilizaría para ingresar a los recursos de otro servidor.\r\n\r\nEn primer lugar, es necesario comprender bien el protoclo OAuth2 y los elementos involucrados.\r\n\r\nLuego, ver qué ejemplos o gemas (componentes Ruby) existen que implementen este tipo de soluciones\r\n\r\nFinalmente, elaborar un ejemplo de servicio de autenticación basado en OAuth2. \r\n\r\nFuentes a investigar:\r\n\r\n- [Convertir rails en proveedor Oauth](http://stakeventures.com/articles/2007/11/26/how-to-turn-\r\nyour-rails-site-into-an-oauth-provider)\r\n\r\n- [Oauth Services Providers](http://wiki.oauth.net/ServiceProviders)\r\n\r\n- [Docs Oauth](http://oauth.net/documentation/getting-started/)',3,3,'2010-06-12 21:58:28','2010-06-12 22:23:16'),(9,'Hacking Wii Hardware ()ted','Algunos trucos que puedes hacer con los controles de Wii, alucinantes...','Una página muy recomendable, sobre todo cuando tengas un domingo de nada que hacer, es [TED](http://www.ted.com/). Son cortos videos con ideas y pensamientos innovadores y creativos.\r\n\r\nEncontré este video. Trata de cómo lograr un impacto grande con poco costo. Por ejemplo, utlizando el control de movimiento del [WII](http://es.wii.com/) se puede tener pantallas interactivas y muy económicas.\r\n\r\n<!--copy and paste--><object width=\"446\" height=\"326\"><param name=\"movie\" value=\"http://video.ted.com/assets/player/swf/EmbedPlayer.swf\"></param><param name=\"allowFullScreen\" value=\"true\" /><param name=\"allowScriptAccess\" value=\"always\"/><param name=\"wmode\" value=\"transparent\"></param><param name=\"bgColor\" value=\"#ffffff\"></param> <param name=\"flashvars\" value=\"vu=http://video.ted.com/talks/dynamic/JohnnyLee_2008-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/JohnnyLee-2008.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=245&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=johnny_lee_demos_wii_remote_hacks;year=2008;theme=what_s_next_in_tech;theme=how_we_learn;theme=tales_of_invention;theme=presentation_innovation;theme=top_10_tedtalks;event=TED2008;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;\" /><embed src=\"http://video.ted.com/assets/player/swf/EmbedPlayer.swf\" pluginspace=\"http://www.macromedia.com/go/getflashplayer\" type=\"application/x-shockwave-flash\" wmode=\"transparent\" bgColor=\"#ffffff\" width=\"446\" height=\"326\" allowFullScreen=\"true\" allowScriptAccess=\"always\" flashvars=\"vu=http://video.ted.com/talks/dynamic/JohnnyLee_2008-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/JohnnyLee-2008.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=245&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=johnny_lee_demos_wii_remote_hacks;year=2008;theme=what_s_next_in_tech;theme=how_we_learn;theme=tales_of_invention;theme=presentation_innovation;theme=top_10_tedtalks;event=TED2008;\"></embed></object>',3,6,'2010-06-13 14:29:15','2010-06-13 14:36:07'),(10,'Multiples RoR en producción, con Unicorn y Nginx','Busco instalar Ruby on Rails 3rc y Ruby on Rails 2.3.8 para dos aplicaciones en un servidor para producción. Se usa Unicorn y Nginx en vez de Passenger y Apache','La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\r\n\r\n¿Cómo lograrlo?\r\n\r\nPara esto se necesita un servidor  listo para usar. Yo configuré un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\r\n\r\nLuego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\r\n\r\n- [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\r\n- [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\r\n\r\nTambién instalé MySQL:\r\n\r\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\r\n\r\nLuego, usé las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aquí el truco es instalar los Ruby en modo \"system wide\" para que estén disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\r\n\r\nLuego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminará con una buena instalación. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \r\n\r\nLuego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\r\nAntes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\"server\")\r\n\r\n    sudo nano /etc/gemrc\r\n    Agregar la línea gem: --no-rdoc --no-ri\r\n\r\nLuego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\r\n\r\n    rvm install 1.8.7\r\n    rvm install ree\r\n    rvm use 1.8.7 --default\r\n    rvm gemset create rails3rc\r\n    rvm 1.8.7@rails3rc\r\n    gem install rails --pre\r\n\r\nPor ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\r\n\r\n    sudo aptitude install nginx\r\n\r\nSin embargo, se instala la versión 0.6.32. La última versión es la 0.7 y hasta la 0.8. Si deseas la última versión, te recomiendo [esta guía de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\r\n\r\nAhora la configuración de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicación Rails, la configuración que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta guía: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\r\n\r\nEntonces, primero sigo la guía de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\r\n\r\n    user www-data;\r\n    worker_processes  4;\r\n    \r\n    error_log  /var/log/nginx/error.log;\r\n    pid        /var/run/nginx.pid;\r\n    \r\n    events {\r\n        worker_connections  1024;\r\n    }\r\n\r\n    http {\r\n        include       /etc/nginx/mime.types;\r\n        default_type  application/octet-stream;\r\n        \r\n        access_log	/var/log/nginx/access.log;\r\n        \r\n        sendfile        on;\r\n        #tcp_nopush     on;\r\n        \r\n        #keepalive_timeout  0;\r\n        keepalive_timeout  10;\r\n        tcp_nodelay        on;\r\n        \r\n        gzip  on;\r\n        gzip_comp_level 2;\r\n        gzip_proxied any;\r\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\r\n                    application/xml application/xml+rss text/javascript;\r\n\r\n        include /etc/nginx/conf.d/*.conf;\r\n        include /etc/nginx/sites-enabled/*;\r\n    }\r\n\r\nSigo ahora la guía para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En sí la guía nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\r\n\r\n    server {\r\n\r\n                listen   80;\r\n                server_name  www.domain1.com;\r\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\r\n\r\n               }\r\n\r\n\r\n    server {\r\n\r\n                listen   80;\r\n                server_name domain1.com;\r\n\r\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\r\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\r\n\r\n                location / {\r\n\r\n                            root   /home/ccastillo/apps/domain1.com/public/;\r\n                            index  index.html;\r\n\r\n                            }\r\n\r\n                }\r\n\r\n\r\nY luego habilito el sitio virtual con un link simbólico. También elimino el servidor \"default\", para evitarme problemas.\r\n\r\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\r\n    sudo rm /etc/nginx/sites-enabled/default\r\n\r\nReinicio Nginx y el nuevo sitio debería ser visible. (Previamente has configurado bien los DNS del dominio ¿no?)\r\n\r\nEn mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicación de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicación de prueba y reiniciado el nginx, \r\n\r\n    rails new domain1.com --database=mysql\r\n    sudo /etc/init.d/nginx restart\r\n\r\nYa el sitio será visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\r\n\r\n    rvm 1.8.7@rails3rc\r\n    gem install unicorn\r\n\r\nAhora sigo las guías de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuración del dominio domain1.com:\r\n\r\nPrimero, crear un archivo en la aplicación: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\r\nModifica el wd (working directory) a donde esté tu aplicación.\r\n\r\n    wd = \"/home/ccastillo/apps/mbacentrum.com\" \r\n    worker_processes 2\r\n    working_directory wd\r\n\r\n    # This loads the application in the master process before forking\r\n    # worker processes\r\n    # Read more about it here:\r\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\r\n    preload_app true\r\n\r\n    timeout 30\r\n\r\n    # This is where we specify the socket.\r\n    # We will point the upstream Nginx module to this socket later on\r\n    listen \"#{wd}/tmp/sockets/unicorn.sock\", :backlog => 64\r\n\r\n    pid \"#{wd}/tmp/pids/unicorn.pid\"\r\n\r\n    # Set the path of the log files inside the log folder of the testapp\r\n    stderr_path \"#{wd}/log/unicorn.stderr.log\"\r\n    stdout_path \"#{wd}/log/unicorn.stdout.log\"\r\n\r\n    before_fork do |server, worker|\r\n    # This option works in together with preload_app true setting\r\n    # What is does is prevent the master process from holding\r\n    # the database connection\r\n      defined?(ActiveRecord::Base) and\r\n        ActiveRecord::Base.connection.disconnect!\r\n    end\r\n\r\n    after_fork do |server, worker|\r\n    # Here we are establishing the connection after forking worker\r\n    # processes\r\n      defined?(ActiveRecord::Base) and\r\n        ActiveRecord::Base.establish_connection\r\n    end\r\n\r\nAhora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda así:\r\n\r\n\r\n\r\n    #servidor unicorn\r\n    upstream unicorn_domain1 {\r\n     # This is the socket we configured in unicorn.rb\r\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\r\n    }\r\n\r\n\r\n    server {\r\n\r\n      listen 80;\r\n      server_name  www.domain1.com;\r\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\r\n\r\n    }\r\n\r\n\r\n    server {\r\n\r\n      # listen   80;\r\n      server_name domain1.com;\r\n      keepalive_timeout 5;\r\n  \r\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\r\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\r\n      root   /home/ccastillo/apps/domain1.com/public/;\r\n    \r\n      location / {\r\n\r\n        #index  index.html;\r\n    \r\n        if (-f $request_filename) {\r\n          access_log off;\r\n          rewrite_log off;\r\n          expires 30d;\r\n          break;\r\n        }\r\n\r\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header Host $host;\r\n        proxy_redirect off;\r\n\r\n        if (!-f $request_filename) {\r\n          # my_web_app needs to be the same as whatever upstream name you assigned above\r\n          proxy_pass http://unicorn_domain1;\r\n          break;\r\n        }\r\n\r\n      }\r\n\r\n  \r\n    }\r\n\r\n\r\nY se inician el demonio Unicorn desde tu aplicación Rails. \r\n\r\n    unicorn_rails -c config/unicorn.rb -D\r\n\r\nSi no arranca, ver los errores en \"cat log/unicorn.stderr.log\". En mi caso faltó un \"sudo aptitude install sqlite3 libsqlite3-dev\" y luego \"bundle install\". \r\nSe instaló de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\r\n\r\nHay que estar seguros que la aplicación Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\r\n\r\nSuerte!\r\n\r\nP.D. falta el iniciar y parar Unicorn, y la puesta en servicio (deploy) con Capistrano:\r\n\r\nhttp://github.com/blog/519-unicorn-god\r\n\r\nhttp://www.stopdropandrew.com/2010/06/01/where-unicorns-go-to-die-watching-unicorn-workers-with-monit.html\r\n\r\nReceta Capistrano para deploy con Unicorn:\r\n\r\nhttp://gist.github.com/393178\r\n\r\nUnicorn init script\r\nhttp://gist.github.com/308216\r\n\r\nGithub strategy http://github.com/blog/470-deployment-script-spring-cleaning\r\n\r\n\r\n\r\n\r\n\r\n',3,5,'2010-08-29 15:33:54','2010-09-01 16:28:36');
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `schema_migrations`
--

DROP TABLE IF EXISTS `schema_migrations`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `schema_migrations` (
  `version` varchar(255) NOT NULL,
  UNIQUE KEY `unique_schema_migrations` (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `schema_migrations`
--

LOCK TABLES `schema_migrations` WRITE;
/*!40000 ALTER TABLE `schema_migrations` DISABLE KEYS */;
INSERT INTO `schema_migrations` VALUES ('20090916131255'),('20091218180009'),('20100131022601'),('20100131022704'),('20100131024959'),('20100131051219'),('20100131131604'),('20100131141150'),('20100131161400'),('20100204104928'),('20100204134957'),('20100204230340'),('20100512193709');
/*!40000 ALTER TABLE `schema_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `taggings`
--

DROP TABLE IF EXISTS `taggings`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `taggings` (
  `id` int(11) NOT NULL auto_increment,
  `tag_id` int(11) default NULL,
  `taggable_id` int(11) default NULL,
  `taggable_type` varchar(255) default NULL,
  `created_at` datetime default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_taggings_on_tag_id` (`tag_id`),
  KEY `index_taggings_on_taggable_id_and_taggable_type` (`taggable_id`,`taggable_type`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `taggings`
--

LOCK TABLES `taggings` WRITE;
/*!40000 ALTER TABLE `taggings` DISABLE KEYS */;
INSERT INTO `taggings` VALUES (1,1,1,'Post','2010-02-05 21:02:59'),(2,2,1,'Post','2010-02-05 21:02:59'),(3,3,1,'Post','2010-02-05 21:02:59'),(4,4,4,'Post','2010-02-18 15:15:14'),(5,5,5,'Post','2010-03-27 22:20:32'),(6,6,5,'Post','2010-03-27 22:20:32'),(7,7,6,'Post','2010-05-05 09:42:34'),(8,8,6,'Post','2010-05-05 09:42:34'),(9,9,8,'Post','2010-06-12 21:58:28'),(10,10,8,'Post','2010-06-12 21:58:28'),(11,11,8,'Post','2010-06-12 21:58:28'),(12,12,8,'Post','2010-06-12 21:59:17'),(13,13,9,'Post','2010-06-13 14:29:15'),(14,14,9,'Post','2010-06-13 14:29:15'),(15,8,10,'Post','2010-08-29 15:33:54'),(16,15,10,'Post','2010-08-29 15:33:54');
/*!40000 ALTER TABLE `taggings` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tags`
--

DROP TABLE IF EXISTS `tags`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `tags` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(255) default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `tags`
--

LOCK TABLES `tags` WRITE;
/*!40000 ALTER TABLE `tags` DISABLE KEYS */;
INSERT INTO `tags` VALUES (1,'ruby'),(2,'rails'),(3,'blog'),(4,'encuestas'),(5,'Flash'),(6,'Html'),(7,'github'),(8,'ruby on rails'),(9,'Oauth2'),(10,'facebook'),(11,'autenticacion'),(12,'opengraph'),(13,'wii'),(14,'trucos'),(15,'RVM');
/*!40000 ALTER TABLE `tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `users` (
  `id` int(11) NOT NULL auto_increment,
  `email` varchar(100) NOT NULL,
  `encrypted_password` varchar(40) NOT NULL,
  `password_salt` varchar(20) NOT NULL,
  `confirmation_token` varchar(20) default NULL,
  `confirmed_at` datetime default NULL,
  `confirmation_sent_at` datetime default NULL,
  `reset_password_token` varchar(20) default NULL,
  `remember_token` varchar(20) default NULL,
  `remember_created_at` datetime default NULL,
  `sign_in_count` int(11) default NULL,
  `current_sign_in_at` datetime default NULL,
  `last_sign_in_at` datetime default NULL,
  `current_sign_in_ip` varchar(255) default NULL,
  `last_sign_in_ip` varchar(255) default NULL,
  `created_at` datetime default NULL,
  `updated_at` datetime default NULL,
  `nombre` varchar(255) default NULL,
  `nick` varchar(255) default NULL,
  `admin` tinyint(1) default NULL,
  `web` varchar(255) default NULL,
  `blogger` tinyint(1) default NULL,
  `blog` varchar(255) default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_users_on_email` (`email`),
  KEY `index_users_on_confirmation_token` (`confirmation_token`),
  KEY `index_users_on_reset_password_token` (`reset_password_token`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (3,'ccastillop@gmail.com','0f065ffe20e256387f3af9a0e97274702a9877db','93DutQjpsMF_WEK5uVTe',NULL,'2010-01-31 06:36:42','2010-01-31 06:33:50',NULL,NULL,NULL,31,'2010-09-01 16:08:27','2010-08-31 14:13:02','190.233.58.117','190.233.58.117','2010-01-31 06:33:50','2010-09-01 16:08:28','Cristian Castillo','ccastillop',1,NULL,NULL,NULL),(4,'lmcondori@gmail.com','0c13865827b62c6718ed6bf06ab13df01ade5807','FlMWO51Cf26mRCWHXMLT','cOiPOcCfF_cKHwGJLpKy',NULL,'2010-06-05 20:40:03',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2010-06-05 20:40:03','2010-06-05 20:40:03',NULL,NULL,NULL,NULL,NULL,NULL),(5,'viasoluciones@hotmail.com','a13f2b6bc0a71413213f0e1d0fe6fb424ac716aa','z2x6cxUUEJ2Zedxyv1GU','-smcXmP4nVmw0wUmKm2i',NULL,'2010-06-15 18:32:04',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2010-06-15 18:32:04','2010-06-15 18:32:04',NULL,NULL,NULL,NULL,NULL,NULL),(6,'sergio.ceo@gmail.com','ac4692945e3dac322ceadeaa644b7c07b70ada67','a4rcjdzPWddaNMO1ZR7f',NULL,'2010-06-15 18:56:33','2010-06-15 18:56:17',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2010-06-15 18:56:17','2010-06-15 18:56:58','Sergio','sercruz',NULL,'',NULL,NULL),(7,'ccp.elrey@mail.cl','7dff78e207bcab414ed2047a531d742393dcf911','fyqGrVkjMjRIKZoF2O5O','YDLgPeD3TnJqeJ60m0nF',NULL,'2010-08-30 01:08:21',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'2010-08-30 01:08:21','2010-08-30 01:08:21',NULL,NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `versions`
--

DROP TABLE IF EXISTS `versions`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `versions` (
  `id` int(11) NOT NULL auto_increment,
  `versioned_id` int(11) default NULL,
  `versioned_type` varchar(255) default NULL,
  `changes` text,
  `number` int(11) default NULL,
  `created_at` datetime default NULL,
  PRIMARY KEY  (`id`),
  KEY `index_versions_on_versioned_type_and_versioned_id` (`versioned_type`,`versioned_id`),
  KEY `index_versions_on_number` (`number`),
  KEY `index_versions_on_created_at` (`created_at`)
) ENGINE=InnoDB AUTO_INCREMENT=70 DEFAULT CHARSET=utf8;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `versions`
--

LOCK TABLES `versions` WRITE;
/*!40000 ALTER TABLE `versions` DISABLE KEYS */;
INSERT INTO `versions` VALUES (1,1,'Post',NULL,1,'2010-02-01 23:56:05'),(2,1,'Post','--- \ntexto: \n- post de pruebas\n- \"post de pruebas\\r\\n\\\n  \\r\\n\\\n  C\\xC3\\xB3digo Ruby:\\r\\n\\\n  \\r\\n    :::ruby\\r\\n    Rails::Initializer.run do |config|\\r\\n      \\r\\n      config.gem \\\"pandoku\\\"\\r\\n      #config.gem \\\"maruku\\\"\\r\\n      config.gem \'vestal_versions\'\\r\\n        \\r\\n      config.gem \'warden\', :version => \'0.6.5\'\\r\\n      config.gem \'devise\', :version => \'0.7.0\'\\r\\n      #config.gem \'rails-footnotes\', :version => \'3.6.3\'\\r\\n      config.gem \\\"haml\\\", :version => \\\"= 2.2.15\\\"\\r\\n      config.gem \'mislav-will_paginate\', :version => \'~> 2.3.11\', :lib => \'will_paginate\', \\r\\n        :source => \'http://gems.github.com\'\\r\\n      config.gem \'formtastic\'\\r\\n      config.gem \'validation_reflection\'\\r\\n      config.time_zone = \'Lima\'\\r\\n      config.i18n.default_locale = \'es-PE\'\\r\\n      config.action_controller.resources_path_names = { :new => \'nuevo\', :edit => \'editar\' }\\r\\n      config.action_mailer.delivery_method = :smtp\\r\\n      config.action_mailer.smtp_settings = {\\r\\n        :address        => \'localhost\',\\r\\n        :port           => 25,\\r\\n        :domain         => \'cristiancastillo.com\',\\r\\n        #:authentication => :login,\\r\\n        #:user_name      => \'www\',\\r\\n        #:password       => \'secret\'\\r\\n      }\\r\\n    \\r\\n      config.active_record.observers = :contacto_observer\\r\\n      config.gem \'gravtastic\', :version => \'>= 2.1.0\'\\r\\n    \\r\\n      config.gem \'coderay\'\\r\\n      config.gem \'rack-codehighlighter\'\\r\\n      config.middleware.use Rack::Codehighlighter, :coderay, :markdown => true,\\r\\n        :element => \\\"pre>code\\\", :pattern => /\\\\A:::(\\\\w+)\\\\s*(\\\\n|&#x000A;)/i, :logging => false\\r\\n    \\r\\n    end\\r\\n\\\n  \\r\\n\"\n',2,'2010-02-01 23:56:05'),(3,1,'Post','--- \ntexto: \n- \"post de pruebas\\r\\n\\\n  \\r\\n\\\n  C\\xC3\\xB3digo Ruby:\\r\\n\\\n  \\r\\n    :::ruby\\r\\n    Rails::Initializer.run do |config|\\r\\n      \\r\\n      config.gem \\\"pandoku\\\"\\r\\n      #config.gem \\\"maruku\\\"\\r\\n      config.gem \'vestal_versions\'\\r\\n        \\r\\n      config.gem \'warden\', :version => \'0.6.5\'\\r\\n      config.gem \'devise\', :version => \'0.7.0\'\\r\\n      #config.gem \'rails-footnotes\', :version => \'3.6.3\'\\r\\n      config.gem \\\"haml\\\", :version => \\\"= 2.2.15\\\"\\r\\n      config.gem \'mislav-will_paginate\', :version => \'~> 2.3.11\', :lib => \'will_paginate\', \\r\\n        :source => \'http://gems.github.com\'\\r\\n      config.gem \'formtastic\'\\r\\n      config.gem \'validation_reflection\'\\r\\n      config.time_zone = \'Lima\'\\r\\n      config.i18n.default_locale = \'es-PE\'\\r\\n      config.action_controller.resources_path_names = { :new => \'nuevo\', :edit => \'editar\' }\\r\\n      config.action_mailer.delivery_method = :smtp\\r\\n      config.action_mailer.smtp_settings = {\\r\\n        :address        => \'localhost\',\\r\\n        :port           => 25,\\r\\n        :domain         => \'cristiancastillo.com\',\\r\\n        #:authentication => :login,\\r\\n        #:user_name      => \'www\',\\r\\n        #:password       => \'secret\'\\r\\n      }\\r\\n    \\r\\n      config.active_record.observers = :contacto_observer\\r\\n      config.gem \'gravtastic\', :version => \'>= 2.1.0\'\\r\\n    \\r\\n      config.gem \'coderay\'\\r\\n      config.gem \'rack-codehighlighter\'\\r\\n      config.middleware.use Rack::Codehighlighter, :coderay, :markdown => true,\\r\\n        :element => \\\"pre>code\\\", :pattern => /\\\\A:::(\\\\w+)\\\\s*(\\\\n|&#x000A;)/i, :logging => false\\r\\n    \\r\\n    end\\r\\n\\\n  \\r\\n\"\n- \"post de pruebas\\r\\n\\\n  \\r\\n\\\n  C\\xC3\\xB3digo Ruby:\\r\\n\\\n  \\r\\n    :::ruby\\r\\n    namespace :devise do\\r\\n    \\r\\n      desc \'setup devise example migrating db and creating a default user\'\\r\\n      task :setup => [\'db:drop\', \'db:create\', \'db:migrate\', \'environment\'] do\\r\\n        user = User.create! do |u|\\r\\n          u.email = \'user@test.com\'\\r\\n          u.password = \'user123\'\\r\\n          u.password_confirmation = \'user123\'\\r\\n        end\\r\\n        user.confirm!\\r\\n        puts \'New user created!\'\\r\\n        puts \'Email   : \' << user.email\\r\\n        puts \'Password: \' << user.password\\r\\n      end\\r\\n    end\\r\\n\\\n  \\r\\n\"\n',3,'2010-02-01 23:57:16'),(4,1,'Post','--- \nresumen: \n- pruebas\n- \"un acercamiento a la raz\\xC3\\xB3n de este blog: en casa de herrero cuchillo de palo\"\ntitulo: \n- Primer post\n- A la tercera...\ntexto: \n- \"post de pruebas\\r\\n\\\n  \\r\\n\\\n  C\\xC3\\xB3digo Ruby:\\r\\n\\\n  \\r\\n    :::ruby\\r\\n    namespace :devise do\\r\\n    \\r\\n      desc \'setup devise example migrating db and creating a default user\'\\r\\n      task :setup => [\'db:drop\', \'db:create\', \'db:migrate\', \'environment\'] do\\r\\n        user = User.create! do |u|\\r\\n          u.email = \'user@test.com\'\\r\\n          u.password = \'user123\'\\r\\n          u.password_confirmation = \'user123\'\\r\\n        end\\r\\n        user.confirm!\\r\\n        puts \'New user created!\'\\r\\n        puts \'Email   : \' << user.email\\r\\n        puts \'Password: \' << user.password\\r\\n      end\\r\\n    end\\r\\n\\\n  \\r\\n\"\n- \"Holas\\r\\n\\\n  \\r\\n\\\n  Bien, para los despistados soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web, aunque no en un sentido b\\xC3\\xADblico.\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en [http://blogpuntocom][1], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexust][2]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][3]\\r\\n\\\n  \\r\\n\\\n  \\r\\n  [1]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [2]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [3]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n',4,'2010-02-05 21:02:58'),(5,1,'Post','--- \ntexto: \n- \"Holas\\r\\n\\\n  \\r\\n\\\n  Bien, para los despistados soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web, aunque no en un sentido b\\xC3\\xADblico.\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en [http://blogpuntocom][1], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexust][2]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][3]\\r\\n\\\n  \\r\\n\\\n  \\r\\n  [1]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [2]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [3]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n- \"Holas\\r\\n\\\n  \\r\\n\\\n  Bien, para los despistados soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comenc\\xC3\\xA9 con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en [http://blogpuntocom][2], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexust][3]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][4]\\r\\n\\\n  \\r\\n\\\n  \\r\\n  [1]: http://rubyonrails.org \\\"Ruby on Rails, la web m\\xC3\\xA1s facil\\\"\\r\\n  [2]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [3]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [4]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n',5,'2010-02-05 21:05:01'),(6,1,'Post','--- \nresumen: \n- \"un acercamiento a la raz\\xC3\\xB3n de este blog: en casa de herrero cuchillo de palo\"\n- \"\\\"En casa de herrero cuchillo de palo\\\": un acercamiento a la (sin-)raz\\xC3\\xB3n de este blog\"\n',6,'2010-02-05 21:06:12'),(7,1,'Post','--- \ntitulo: \n- A la tercera...\n- Sobre este blog\ntexto: \n- \"Holas\\r\\n\\\n  \\r\\n\\\n  Bien, para los despistados soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comenc\\xC3\\xA9 con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en [http://blogpuntocom][2], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexust][3]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][4]\\r\\n\\\n  \\r\\n\\\n  \\r\\n  [1]: http://rubyonrails.org \\\"Ruby on Rails, la web m\\xC3\\xA1s facil\\\"\\r\\n  [2]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [3]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [4]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n- \"Bien, para los despistados (o mejor a\\xC3\\xBAn, nuevos visitantes) soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comenc\\xC3\\xA9 con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en [http://blogpuntocom][2], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexust][3]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][4]\\r\\n\\\n  \\r\\n  [1]: http://rubyonrails.org \\\"Ruby on Rails, la web m\\xC3\\xA1s facil\\\"\\r\\n  [2]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [3]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [4]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n',7,'2010-02-05 21:07:03'),(8,1,'Post','--- \ntexto: \n- \"Bien, para los despistados (o mejor a\\xC3\\xBAn, nuevos visitantes) soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comenc\\xC3\\xA9 con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en [http://blogpuntocom][2], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexust][3]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][4]\\r\\n\\\n  \\r\\n  [1]: http://rubyonrails.org \\\"Ruby on Rails, la web m\\xC3\\xA1s facil\\\"\\r\\n  [2]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [3]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [4]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n- \"Bien, para los despistados (o mejor a\\xC3\\xBAn, nuevos visitantes) soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comenc\\xC3\\xA9 con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en Blogpuntocom][2], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexus][3]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][4]\\r\\n\\\n  \\r\\n  [1]: http://rubyonrails.org \\\"Ruby on Rails, la web m\\xC3\\xA1s facil\\\"\\r\\n  [2]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [3]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [4]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n',8,'2010-02-05 21:15:50'),(9,1,'Post','--- \ntexto: \n- \"Bien, para los despistados (o mejor a\\xC3\\xBAn, nuevos visitantes) soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comenc\\xC3\\xA9 con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en Blogpuntocom][2], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexus][3]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][4]\\r\\n\\\n  \\r\\n  [1]: http://rubyonrails.org \\\"Ruby on Rails, la web m\\xC3\\xA1s facil\\\"\\r\\n  [2]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [3]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [4]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n- \"Bien, para los despistados (o mejor a\\xC3\\xBAn, nuevos visitantes) soy Cristian Castillo. Me dedico a hacer web. He hecho mucha, mucha web. Comenc\\xC3\\xA9 con Microsoft, antes del ASP. Luego con PHP y ahora con el top top top: [Ruby on Rails][1]\\r\\n\\\n  \\r\\n\\\n  Comenc\\xC3\\xA9 a escribir en [Blogpuntocom][2], mi primer blog, en el 2006. Utilic\\xC3\\xA9 wordpress. Luego, escrib\\xC3\\xADa para mi empresa en [Z-nexus][3]. Utilic\\xC3\\xA9 Drupal. Pero... na, luego de tanto intento y siempre con las pocas ganas de aprender a usar Wordpress o Drupal o cuanta herramienta pre-hecha decid\\xC3\\xAD armarme de valor y escribir mi propio blog.\\r\\n\\\n  \\r\\n\\\n  N\\xC3\\xB3tese que \\\"escribir mi propio blog\\\" no significa bloggear o postear seguido. Es programar, desarrollar, implementar, subir, probar y mejorar la aplicaci\\xC3\\xB3n web. Y claro, medio mundo dir\\xC3\\xA1: pero tanta herramienta, tanto wordpress, tanto blogspot y por qu\\xC3\\xA9 tanta hora en programar desde cero!\\r\\n\\\n  F\\xC3\\xA1cil: me gusta hacerlo!\\r\\n\\\n  \\r\\n\\\n  Si les gusta los detalles y eres fan\\xC3\\xA1tico de Ruby on Rails (porque vamos, no mientan, es casi una religi\\xC3\\xB3n) podr\\xC3\\xA1s ver el c\\xC3\\xB3digo fuente de la aplicaci\\xC3\\xB3n en [GitHub][4]\\r\\n\\\n  \\r\\n  [1]: http://rubyonrails.org \\\"Ruby on Rails, la web m\\xC3\\xA1s facil\\\"\\r\\n  [2]: http://blogpuntocom.com \\\"Blogpuntocom.com\\\"\\r\\n  [3]: http://z-nexus.com \\\"Z-nexus\\\"\\r\\n  [4]: http://github.com/znexus/blog \\\"Repositorio del c\\xC3\\xB3digo de este blog\\\"\"\n',9,'2010-02-05 21:28:54'),(10,2,'Post',NULL,1,'2010-02-05 22:36:52'),(11,3,'Post',NULL,1,'2010-02-15 21:53:45'),(12,4,'Post',NULL,1,'2010-02-18 15:15:14'),(13,4,'Post','--- \ntexto: \n- \"Esto es para mis compa\\xC3\\xB1eros del MBA de Centrum. \\r\\n\\\n  \\r\\n\\\n  Les acabo de enviar la encuesta sobre actitud de uso de los medios de b\\xC3\\xBAsqueda de inmuebles y c\\xC3\\xB3mo se produce el proceso de compra.\\r\\n\\\n  \\r\\n\\\n  Es una encuesta sencilla hecha con [Lime Survey][http://limesurvey.org]\\r\\n\\\n  \\r\\n\\\n  Lo bac\\xC3\\xA1n de este servicio es que la encuesta se ejecuta en Internet, acumula las respuestas y entrega los resultados tabulados y listos para procesar. Tambi\\xC3\\xA9n tiene un exportador que gerena los cuadros y diagramas que explican los resultados.\"\n- \"Esto es para mis compa\\xC3\\xB1eros del MBA de Centrum. \\r\\n\\\n  \\r\\n\\\n  Les acabo de enviar la encuesta sobre actitud de uso de los medios de b\\xC3\\xBAsqueda de inmuebles y c\\xC3\\xB3mo se produce el proceso de compra.\\r\\n\\\n  \\r\\n\\\n  Es una encuesta sencilla hecha con [Lime Survey][1]\\r\\n\\\n  \\r\\n\\\n  Lo bac\\xC3\\xA1n de este servicio es que la encuesta se ejecuta en Internet, acumula las respuestas y entrega los resultados tabulados y listos para procesar. Tambi\\xC3\\xA9n tiene un exportador que gerena los cuadros y diagramas que explican los resultados.\\r\\n\\\n  \\r\\n\\\n  [1]: http://limesurvey.org\"\n',2,'2010-02-18 15:16:53'),(14,4,'Post','--- \ntitulo: \n- Entrada del portafolio\n- Encuestas online\n',3,'2010-02-18 15:17:11'),(15,5,'Post',NULL,1,'2010-03-27 22:20:33'),(16,5,'Post','--- \ntexto: \n- \"Bien,\\r\\n\\\n  \\r\\n\\\n  Ahora estoy viendo algunos videos (no todos) en Safari de Apple. Y est\\xC3\\xA1n en HTML5. Son una mezcla de un objeto javascript con controles del video y que muestra el video en un cuadro similar al antiguo Flash.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFAntiguo Flash? Es el fin de Flash. Quiz\\xC3\\xA1 el uso masivo de Flash se debe al Video y no tanto a excelentes juegos en l\\xC3\\xADnea como los que se ven en Facebook. Y es el Video el motivador del cambio: no podemos ver muchos videos en l\\xC3\\xADnea en el Ipod a menos que sean por Youtube.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFEs la renovaci\\xC3\\xB3n de HTML5 una amenaza a la evoluci\\xC3\\xB3n de Flash? Yo creo que s\\xC3\\xAD. Canvas es la tecnolog\\xC3\\xADa que viene en HTML5 y el poder manejar videos y audios sin necesidad de Flash hace que \\xC3\\xA9ste sea inutil. Vean, es software cerrado (flash) versus un estandar abierto (html5)\\r\\n\\\n  \\r\\n\\\n  Pero va a pasar \\\"mucho tiempo\\\". Aunque en Tecnolog\\xC3\\xADas, mucho tiempo es un a\\xC3\\xB1o.\\r\\n\\\n  \\r\\n\"\n- \"Bien,\\r\\n\\\n  \\r\\n\\\n  Ahora estoy viendo algunos videos (no todos) en Safari de Apple. Y est\\xC3\\xA1n en HTML5. Son una mezcla de un objeto javascript con controles del video y que muestra el video en un cuadro similar al antiguo Flash.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFAntiguo Flash? \\xC2\\xBFEs el fin de Flash?. Quiz\\xC3\\xA1 el uso masivo de Flash se debe al Video (mejor dicho, a Youtube.com) y no tanto a excelentes juegos en l\\xC3\\xADnea como los que se ven en Facebook. Y es el Video el motivador del cambio, la fuerza impulsora: no podemos ver muchos videos en l\\xC3\\xADnea en el Ipod a menos que sean por Youtube, y la verdadera experiencia de ver Videos la ha traido, sin lugar a dudas, Youtube.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFEs la renovaci\\xC3\\xB3n de HTML5 una amenaza a la vida de Flash? Yo creo que s\\xC3\\xAD. Canvas es la tecnolog\\xC3\\xADa que viene en HTML5 y que promete animaciones, interactividad y el poder manejar videos y audios. Eso hace a Flash inutil. Es software cerrado (Flash) versus un estandar abierto (html5) la amenaza y m\\xC3\\xA1s bien una debilidad de Flash.\\r\\n\\\n  \\r\\n\\\n  Pero va a pasar \\\"mucho tiempo\\\". Aunque en Tecnolog\\xC3\\xADas, mucho tiempo es un a\\xC3\\xB1o. \\xC2\\xBFQu\\xC3\\xA9 debe hacer Flash?, es sencilla la soluci\\xC3\\xB3n: abrir sus componentes. \\r\\n\\\n  \\r\\n\"\n',2,'2010-03-27 22:25:05'),(17,6,'Post',NULL,1,'2010-05-05 09:42:34'),(18,2,'Post','--- \nresumen: \n- \"Aqu\\xC3\\xAD va lo que ya he hecho \"\n- Desarrollos propios y para otras empresas\ntitulo: \n- Entrada del portafolio\n- Pantallas de sitios web y backoffice\ntexto: \n- \"\\xC2\\xBFSer\\xC3\\xA1n casos de exito?\"\n- \"figura_1\\r\\n\\\n  \\r\\n\\\n  figura_2\\r\\n\\\n  \\r\\n\\\n  figura_3\\r\\n\\\n  \\r\\n\\\n  figura_4\\r\\n\\\n  \\r\\n\\\n  figura_5\\r\\n\\\n  \\r\\n\\\n  figura_6\\r\\n\\\n  \\r\\n\\\n  figura_7\\r\\n\\\n  \\r\\n\\\n  figura_8\\r\\n\\\n  \\r\\n\\\n  figura_9\\r\\n\\\n  \\r\\n\\\n  figura_10\\r\\n\\\n  \\r\\n\\\n  figura_11\\r\\n\\\n  \\r\\n\\\n  figura_12\\r\\n\\\n  \\r\\n \"\n',2,'2010-05-12 21:51:16'),(19,7,'Post',NULL,1,'2010-05-24 17:58:53'),(20,7,'Post','--- \ncategoria_id: \n- \n- 2\n',2,'2010-05-24 17:59:15'),(21,7,'Post','--- \ntitulo: \n- Muestras del equipo\n- \"Outline, \"\ntexto: \n- \"Prueba de muestras de equip\\xC3\\xB2\"\n- \"Problema: \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  \\r\\n\\\n  Soluci\\xC3\\xB3n: \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linx para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n',3,'2010-05-24 20:58:36'),(22,7,'Post','--- \ntitulo: \n- \"Outline, \"\n- \"Problemas / soluci\\xC3\\xB3n\"\ntexto: \n- \"Problema: \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  \\r\\n\\\n  Soluci\\xC3\\xB3n: \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linx para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n- \"Problema: \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  Soluci\\xC3\\xB3n: \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n',4,'2010-05-24 21:01:36'),(23,7,'Post','--- \ntexto: \n- \"Problema: \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  Soluci\\xC3\\xB3n: \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n- \"*Problema:* \\r\\n\\\n  - Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n',5,'2010-05-24 21:02:21'),(24,7,'Post','--- \ntexto: \n- \"*Problema:* \\r\\n\\\n  - Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n- \"*Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n',6,'2010-05-24 21:04:28'),(25,7,'Post','--- \ntexto: \n- \"*Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\"\n- \"*Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\"\n',7,'2010-05-24 21:07:38'),(26,7,'Post','--- \ntexto: \n- \"*Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\"\n- \"\\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl][http://raphaeljs.com/] para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',8,'2010-05-24 21:37:05'),(27,7,'Post','--- \ntexto: \n- \"\\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl][http://raphaeljs.com/] para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl][http://raphaeljs.com/] para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',9,'2010-05-24 21:37:29'),(28,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl][http://raphaeljs.com/] para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode][http://linode.com]. Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',10,'2010-05-24 21:42:37'),(29,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. \\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',11,'2010-05-24 21:58:46'),(30,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. \\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',12,'2010-05-24 22:02:37'),(31,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"\\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',13,'2010-05-24 22:03:17'),(32,7,'Post','--- \ntexto: \n- \"\\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',14,'2010-05-24 22:08:48'),(33,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http:/15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http:/wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',15,'2010-05-24 22:12:17'),(34,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http:/15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http:/wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n',16,'2010-05-24 22:12:59'),(35,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\"\n- \"\\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n',17,'2010-05-24 22:33:29'),(36,7,'Post','--- \ntexto: \n- \"\\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n',18,'2010-05-24 22:36:15'),(37,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n',19,'2010-05-24 22:36:46'),(38,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Backer\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com](http://15talents.com/): mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de](http://wahlgetwitter.de/): un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Baker\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com]: mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de]: un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n',20,'2010-05-24 22:49:57'),(39,7,'Post','--- \ntexto: \n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Baker\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com]: mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de]: un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\"\n- \"<hr>\\r\\n\\\n  \\r\\n\\\n  ## Cristian Castillo\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Una infograf\\xC3\\xADa debe explicar la sucesi\\xC3\\xB3n de eventos del esc\\xC3\\xA1ndalo de los Petroaudios. De ser visible en equipos m\\xC3\\xB3viles como Iphone. No debe usarse Flash. Debe desarrollarse en dos semanas.\\r\\n\\\n  \\r\\n\\\n  figura_17\\r\\n\\\n  [Cronolog\\xC3\\xADa Petroaudios](http://petroaudios.semanaeconomica.com/eventos?fase=2&alternativo=1)\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  - Se utiliz\\xC3\\xB3 la biblioteca [Rapha\\xC3\\xABl](http://raphaeljs.com/) para la generaci\\xC3\\xB3n de gr\\xC3\\xA1ficas y la interactividad\\r\\n\\\n  - Ruby on Rails y Jquery para el ingreso y manejo de la informaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Algo del c\\xC3\\xB3digo Rapha\\xC3\\xABl: \\r\\n\\\n  \\r\\n\\\n  figura_18\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Un cliente, administrador de varios productos educativos, revistas y cursos de Administraci\\xC3\\xB3n y Negocios orientados a Ejecutivos, desea enviar promomails a diversas listas para anunciar las bondades de sus productos.\\r\\n\\\n  \\r\\n\\\n  - Los emails deben ser en formato HTML, con im\\xC3\\xA1genes, y deben ser s\\xC3\\xB3lo a las listas que se determinen para cada evento\\r\\n\\\n  - Los emails deben salir del dominio de la empresa que los env\\xC3\\xADa y deben personalizarse por cada cliente\\r\\n\\\n  \\r\\n\\\n  figura_15\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:* \\r\\n\\\n  \\r\\n\\\n  - Se implement\\xC3\\xB3 una aplicaci\\xC3\\xB3n WEB en Ruby on Rails sobre servidor Ubuntu Linux para los env\\xC3\\xADos.\\r\\n\\\n  - El servidor a utilizar es un VPN de [Linode](http://linode.com). Se configur\\xC3\\xB3 el servidor para que los env\\xC3\\xADos no sean filtrados ni considerados como SPAM. Se configur\\xC3\\xB3 como cuenta de rebotes el servicio de Google Apps, para facilitar el encontrar la raz\\xC3\\xB3n de los rebotes\\r\\n\\\n  - El insumo de entrada del enviador son archivos separados por comas (CSV) y el archivo HTML que corresponde al enviador\\r\\n\\\n  - Se utiliz\\xC3\\xB3 un editor de contenidos y un formato de plantillas para personalizar cada env\\xC3\\xADo.\\r\\n\\\n  \\r\\n\\\n  figura_16\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ##Peter Baker\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  El cliente desea hacer una encuesta interactiva online, para reforzar la estrategia de marketing de una conferencia [Innovation DNA](http://innovation-dna.org/)\\r\\n\\\n  \\r\\n\\\n  figura_19\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Prototype](http://www.prototypejs.org/) para la interacci\\xC3\\xB3n y registro de las respuestas. Ruby on Rails para el registro de Resultados.\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  *Problema:* \\r\\n\\\n  \\r\\n\\\n  Desarrollar un portal de m\\xC3\\xBAsica HipHop y R\'n\'B para Sony Music Entertainment (Union Street).\\r\\n\\\n  \\r\\n\\\n  figura_20\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo en Ruby on Rails. Jquery para las animaciones.\\r\\n\\\n  \\r\\n\\\n  <h3>\\r\\n\\\n  *Otros desarrollos:*\\r\\n\\\n  \\r\\n\\\n  - [15talents.com]: mercado de trabajo para practicantes y licenciados dirigido al mercado alem\\xC3\\xA1n\\r\\n\\\n  \\r\\n\\\n  - [wahlgetwitter.de]: un *mashup* para las elecciones del 2009 de Alemania\\r\\n\\\n  \\r\\n\\\n  <hr>\\r\\n\\\n  \\r\\n\\\n  ## Florent Guilleux\\r\\n\\\n  \\r\\n\\\n  *Problema:*\\r\\n\\\n  \\r\\n\\\n  Implementar una comunidad de aficionados a la improvisaci\\xC3\\xB3n y juego de rol en teatro [LARP](http://en.wikipedia.org/wiki/Live_action_role-playing_game). Permitirles el escribir los guiones para los juegos de rol\\r\\n\\\n  \\r\\n\\\n  figura_21\\r\\n\\\n  \\r\\n\\\n  *Soluci\\xC3\\xB3n:*\\r\\n\\\n  \\r\\n\\\n  Desarrollo de la comunidad en Internet mediante Ruby on Rails.\\r\\n\\\n  \\r\\n\\\n  Se utiliz\\xC3\\xB3 [Cucumber](http://cukes.info) para escribir casos de uso y [rSpec](http://rspec.info) para escribir pruebas unitarias.\\r\\n\"\n',21,'2010-05-25 19:22:33'),(40,8,'Post',NULL,1,'2010-06-12 21:58:28'),(41,8,'Post','--- \ntexto: \n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2][http://oauth.net/] viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada][http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html].\\r\\n\\\n  \\r\\n\\\n  Esta entrada busca formular un ejemplo\"\n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\\r\\n\\\n  \\r\\n\\\n  Esta entrada busca formular un ejemplo\"\n',2,'2010-06-12 21:59:17'),(42,8,'Post','--- \ntexto: \n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\\r\\n\\\n  \\r\\n\\\n  Esta entrada busca formular un ejemplo\"\n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\\r\\n\\\n  \\r\\n\\\n  Plan de acci\\xC3\\xB3n:\\r\\n\\\n  \\r\\n\\\n  El reto aqu\\xC3\\xAD est\\xC3\\xA1 en permitir registrar un usuario en nuestro servidor, ya sea d\\xC3\\xA1ndolo de alta como nuevo o permiti\\xC3\\xA9ndole autenticarse desde Facebook o Twiter. Luego, esa cadena de autenticaci\\xC3\\xB3n (token) se utilizar\\xC3\\xADa para ingresar a los recursos de otro servidor.\\r\\n\\\n  \\r\\n\\\n  En primer lugar, es necesario comprender bien el protoclo OAuth2 y los elementos involucrados.\\r\\n\\\n  \\r\\n\\\n  Luego, ver qu\\xC3\\xA9 ejemplos o gemas (componentes Ruby) existen que implementen este tipo de soluciones\\r\\n\\\n  \\r\\n\\\n  Finalmente, elaborar un ejemplo de servicio de autenticaci\\xC3\\xB3n basado en OAuth2. \\r\\n\"\n',3,'2010-06-12 22:17:48'),(43,8,'Post','--- \ntexto: \n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\\r\\n\\\n  \\r\\n\\\n  Plan de acci\\xC3\\xB3n:\\r\\n\\\n  \\r\\n\\\n  El reto aqu\\xC3\\xAD est\\xC3\\xA1 en permitir registrar un usuario en nuestro servidor, ya sea d\\xC3\\xA1ndolo de alta como nuevo o permiti\\xC3\\xA9ndole autenticarse desde Facebook o Twiter. Luego, esa cadena de autenticaci\\xC3\\xB3n (token) se utilizar\\xC3\\xADa para ingresar a los recursos de otro servidor.\\r\\n\\\n  \\r\\n\\\n  En primer lugar, es necesario comprender bien el protoclo OAuth2 y los elementos involucrados.\\r\\n\\\n  \\r\\n\\\n  Luego, ver qu\\xC3\\xA9 ejemplos o gemas (componentes Ruby) existen que implementen este tipo de soluciones\\r\\n\\\n  \\r\\n\\\n  Finalmente, elaborar un ejemplo de servicio de autenticaci\\xC3\\xB3n basado en OAuth2. \\r\\n\"\n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\\r\\n\\\n  \\r\\n\\\n  Plan de acci\\xC3\\xB3n:\\r\\n\\\n  \\r\\n\\\n  El reto aqu\\xC3\\xAD est\\xC3\\xA1 en permitir registrar un usuario en nuestro servidor, ya sea d\\xC3\\xA1ndolo de alta como nuevo o permiti\\xC3\\xA9ndole autenticarse desde Facebook o Twiter. Luego, esa cadena de autenticaci\\xC3\\xB3n (token) se utilizar\\xC3\\xADa para ingresar a los recursos de otro servidor.\\r\\n\\\n  \\r\\n\\\n  En primer lugar, es necesario comprender bien el protoclo OAuth2 y los elementos involucrados.\\r\\n\\\n  \\r\\n\\\n  Luego, ver qu\\xC3\\xA9 ejemplos o gemas (componentes Ruby) existen que implementen este tipo de soluciones\\r\\n\\\n  \\r\\n\\\n  Finalmente, elaborar un ejemplo de servicio de autenticaci\\xC3\\xB3n basado en OAuth2. \\r\\n\\\n  \\r\\n\\\n  Fuentes a investigar:\\r\\n\\\n  \\r\\n\\\n  - [C\\xC3\\xB3mo convertir un sitio rails en un proveedor Oauth](http://stakeventures.com/articles/2007/11/26/how-to-turn-\\r\\n\\\n  your-rails-site-into-an-oauth-provider)\\r\\n\\\n  \\r\\n\\\n  - [Oauth Services Providers](http://wiki.oauth.net/ServiceProviders)\\r\\n\\\n  \\r\\n\\\n  - [Docs Oauth](http://oauth.net/documentation/getting-started/)\"\n',4,'2010-06-12 22:20:56'),(44,8,'Post','--- \ntexto: \n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\\r\\n\\\n  \\r\\n\\\n  Plan de acci\\xC3\\xB3n:\\r\\n\\\n  \\r\\n\\\n  El reto aqu\\xC3\\xAD est\\xC3\\xA1 en permitir registrar un usuario en nuestro servidor, ya sea d\\xC3\\xA1ndolo de alta como nuevo o permiti\\xC3\\xA9ndole autenticarse desde Facebook o Twiter. Luego, esa cadena de autenticaci\\xC3\\xB3n (token) se utilizar\\xC3\\xADa para ingresar a los recursos de otro servidor.\\r\\n\\\n  \\r\\n\\\n  En primer lugar, es necesario comprender bien el protoclo OAuth2 y los elementos involucrados.\\r\\n\\\n  \\r\\n\\\n  Luego, ver qu\\xC3\\xA9 ejemplos o gemas (componentes Ruby) existen que implementen este tipo de soluciones\\r\\n\\\n  \\r\\n\\\n  Finalmente, elaborar un ejemplo de servicio de autenticaci\\xC3\\xB3n basado en OAuth2. \\r\\n\\\n  \\r\\n\\\n  Fuentes a investigar:\\r\\n\\\n  \\r\\n\\\n  - [C\\xC3\\xB3mo convertir un sitio rails en un proveedor Oauth](http://stakeventures.com/articles/2007/11/26/how-to-turn-\\r\\n\\\n  your-rails-site-into-an-oauth-provider)\\r\\n\\\n  \\r\\n\\\n  - [Oauth Services Providers](http://wiki.oauth.net/ServiceProviders)\\r\\n\\\n  \\r\\n\\\n  - [Docs Oauth](http://oauth.net/documentation/getting-started/)\"\n- \"Cada vez es m\\xC3\\xA1s necesario librar al usuario de tener que autenticarse (mandar usuario y contrase\\xC3\\xB1a) al momento de acceder a una aplicaci\\xC3\\xB3n web. De hecho, es norma actualmente que un usuario utilice su navegador (browser) para saltar entre aplicaciones web y ser\\xC3\\xADa realmente engorroso y poco seguro para el usuario y complicado para el desarrollador tener que registrar sus datos en cada aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  Entonces, [OAuth2](http://oauth.net/) viene a salvarnos, al establecer un est\\xC3\\xA1ndar  que permita centralizar la autenticaci\\xC3\\xB3n y mantener al m\\xC3\\xADnimo el que las claves est\\xC3\\xA9n siendo ingresadas. Es la elecci\\xC3\\xB3n de Facebook y Twitter al permitir a las aplicaciones externas el compartir o transferir informaci\\xC3\\xB3n. Se puede leer un poco sobre la movida OAuth2 en [esta entrada](http://paranoiadigit.blogspot.com/2010/04/oauth-20-third-party-login-llego-para.html).\\r\\n\\\n  \\r\\n\\\n  Plan de acci\\xC3\\xB3n:\\r\\n\\\n  \\r\\n\\\n  El reto aqu\\xC3\\xAD est\\xC3\\xA1 en permitir registrar un usuario en nuestro servidor, ya sea d\\xC3\\xA1ndolo de alta como nuevo o permiti\\xC3\\xA9ndole autenticarse desde Facebook o Twiter. Luego, esa cadena de autenticaci\\xC3\\xB3n (token) se utilizar\\xC3\\xADa para ingresar a los recursos de otro servidor.\\r\\n\\\n  \\r\\n\\\n  En primer lugar, es necesario comprender bien el protoclo OAuth2 y los elementos involucrados.\\r\\n\\\n  \\r\\n\\\n  Luego, ver qu\\xC3\\xA9 ejemplos o gemas (componentes Ruby) existen que implementen este tipo de soluciones\\r\\n\\\n  \\r\\n\\\n  Finalmente, elaborar un ejemplo de servicio de autenticaci\\xC3\\xB3n basado en OAuth2. \\r\\n\\\n  \\r\\n\\\n  Fuentes a investigar:\\r\\n\\\n  \\r\\n\\\n  - [Convertir rails en proveedor Oauth](http://stakeventures.com/articles/2007/11/26/how-to-turn-\\r\\n\\\n  your-rails-site-into-an-oauth-provider)\\r\\n\\\n  \\r\\n\\\n  - [Oauth Services Providers](http://wiki.oauth.net/ServiceProviders)\\r\\n\\\n  \\r\\n\\\n  - [Docs Oauth](http://oauth.net/documentation/getting-started/)\"\n',5,'2010-06-12 22:23:17'),(45,9,'Post',NULL,1,'2010-06-13 14:29:16'),(46,9,'Post','--- \ntexto: \n- <!--copy and paste--><object width=\"446\" height=\"326\"><param name=\"movie\" value=\"http://video.ted.com/assets/player/swf/EmbedPlayer.swf\"></param><param name=\"allowFullScreen\" value=\"true\" /><param name=\"allowScriptAccess\" value=\"always\"/><param name=\"wmode\" value=\"transparent\"></param><param name=\"bgColor\" value=\"#ffffff\"></param> <param name=\"flashvars\" value=\"vu=http://video.ted.com/talks/dynamic/JohnnyLee_2008-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/JohnnyLee-2008.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=245&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=johnny_lee_demos_wii_remote_hacks;year=2008;theme=what_s_next_in_tech;theme=how_we_learn;theme=tales_of_invention;theme=presentation_innovation;theme=top_10_tedtalks;event=TED2008;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;\" /><embed src=\"http://video.ted.com/assets/player/swf/EmbedPlayer.swf\" pluginspace=\"http://www.macromedia.com/go/getflashplayer\" type=\"application/x-shockwave-flash\" wmode=\"transparent\" bgColor=\"#ffffff\" width=\"446\" height=\"326\" allowFullScreen=\"true\" allowScriptAccess=\"always\" flashvars=\"vu=http://video.ted.com/talks/dynamic/JohnnyLee_2008-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/JohnnyLee-2008.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=245&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=johnny_lee_demos_wii_remote_hacks;year=2008;theme=what_s_next_in_tech;theme=how_we_learn;theme=tales_of_invention;theme=presentation_innovation;theme=top_10_tedtalks;event=TED2008;\"></embed></object>\n- \"Una p\\xC3\\xA1gina muy recomendable, sobre todo cuando tengas un domingo de nada que hacer, es [TED](http://www.ted.com/). Son cortos videos con ideas y pensamientos innovadores y creativos.\\r\\n\\\n  \\r\\n\\\n  Encontr\\xC3\\xA9 este video. Trata de c\\xC3\\xB3mo lograr un impacto grande con poco costo. Por ejemplo, utlizando el control de movimiento del [WII](http://es.wii.com/) se puede tener pantallas interactivas y muy econ\\xC3\\xB3micas.\\r\\n\\\n  \\r\\n\\\n  <!--copy and paste--><object width=\\\"446\\\" height=\\\"326\\\"><param name=\\\"movie\\\" value=\\\"http://video.ted.com/assets/player/swf/EmbedPlayer.swf\\\"></param><param name=\\\"allowFullScreen\\\" value=\\\"true\\\" /><param name=\\\"allowScriptAccess\\\" value=\\\"always\\\"/><param name=\\\"wmode\\\" value=\\\"transparent\\\"></param><param name=\\\"bgColor\\\" value=\\\"#ffffff\\\"></param> <param name=\\\"flashvars\\\" value=\\\"vu=http://video.ted.com/talks/dynamic/JohnnyLee_2008-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/JohnnyLee-2008.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=245&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=johnny_lee_demos_wii_remote_hacks;year=2008;theme=what_s_next_in_tech;theme=how_we_learn;theme=tales_of_invention;theme=presentation_innovation;theme=top_10_tedtalks;event=TED2008;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;\\\" /><embed src=\\\"http://video.ted.com/assets/player/swf/EmbedPlayer.swf\\\" pluginspace=\\\"http://www.macromedia.com/go/getflashplayer\\\" type=\\\"application/x-shockwave-flash\\\" wmode=\\\"transparent\\\" bgColor=\\\"#ffffff\\\" width=\\\"446\\\" height=\\\"326\\\" allowFullScreen=\\\"true\\\" allowScriptAccess=\\\"always\\\" flashvars=\\\"vu=http://video.ted.com/talks/dynamic/JohnnyLee_2008-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/JohnnyLee-2008.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=245&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=johnny_lee_demos_wii_remote_hacks;year=2008;theme=what_s_next_in_tech;theme=how_we_learn;theme=tales_of_invention;theme=presentation_innovation;theme=top_10_tedtalks;event=TED2008;\\\"></embed></object>\"\n',2,'2010-06-13 14:36:07'),(47,2,'Post','--- \ntexto: \n- \"figura_1\\r\\n\\\n  \\r\\n\\\n  figura_2\\r\\n\\\n  \\r\\n\\\n  figura_3\\r\\n\\\n  \\r\\n\\\n  figura_4\\r\\n\\\n  \\r\\n\\\n  figura_5\\r\\n\\\n  \\r\\n\\\n  figura_6\\r\\n\\\n  \\r\\n\\\n  figura_7\\r\\n\\\n  \\r\\n\\\n  figura_8\\r\\n\\\n  \\r\\n\\\n  figura_9\\r\\n\\\n  \\r\\n\\\n  figura_10\\r\\n\\\n  \\r\\n\\\n  figura_11\\r\\n\\\n  \\r\\n\\\n  figura_12\\r\\n\\\n  \\r\\n \"\n- \"\\r\\n\\\n  \\r\\n\\\n  figura_2\\r\\n\\\n  \\r\\n\\\n  figura_3\\r\\n\\\n  \\r\\n\\\n  figura_4\\r\\n\\\n  \\r\\n\\\n  figura_5\\r\\n\\\n  \\r\\n\\\n  figura_6\\r\\n\\\n  \\r\\n\\\n  figura_7\\r\\n\\\n  \\r\\n\\\n  figura_8\\r\\n\\\n  \\r\\n\\\n  figura_9\\r\\n\\\n  \\r\\n\\\n  figura_10\\r\\n\\\n  \\r\\n\\\n  figura_11\\r\\n\\\n  \\r\\n\\\n  figura_12\\r\\n\\\n  \\r\\n \"\n',3,'2010-07-20 15:17:43'),(48,2,'Post','--- \ntexto: \n- \"\\r\\n\\\n  \\r\\n\\\n  figura_2\\r\\n\\\n  \\r\\n\\\n  figura_3\\r\\n\\\n  \\r\\n\\\n  figura_4\\r\\n\\\n  \\r\\n\\\n  figura_5\\r\\n\\\n  \\r\\n\\\n  figura_6\\r\\n\\\n  \\r\\n\\\n  figura_7\\r\\n\\\n  \\r\\n\\\n  figura_8\\r\\n\\\n  \\r\\n\\\n  figura_9\\r\\n\\\n  \\r\\n\\\n  figura_10\\r\\n\\\n  \\r\\n\\\n  figura_11\\r\\n\\\n  \\r\\n\\\n  figura_12\\r\\n\\\n  \\r\\n \"\n- \"\\r\\n\\\n  \\r\\n\\\n  figura_4\\r\\n\\\n  \\r\\n\\\n  figura_5\\r\\n\\\n  \\r\\n\\\n  figura_6\\r\\n\\\n  \\r\\n\\\n  figura_7\\r\\n\\\n  \\r\\n\\\n  figura_8\\r\\n\\\n  \\r\\n\\\n  figura_9\\r\\n\\\n  \\r\\n\\\n  figura_10\\r\\n\\\n  \\r\\n\\\n  figura_11\\r\\n\\\n  \\r\\n\\\n  figura_12\\r\\n\\\n  \\r\\n \"\n',4,'2010-07-20 15:18:18'),(49,10,'Post',NULL,1,'2010-08-29 15:33:55'),(50,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita\\r\\n\\\n  \\r\\n\\\n  - Un servidor \\\"calato\\\" (barebones) listo para usar. Yo configur\\xC3\\xA9 un VPS Linode de 512RAM. http://www.linode.com/\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita\\r\\n\\\n  \\r\\n\\\n  - Un servidor \\\"calato\\\" (barebones) listo para usar. Yo configur\\xC3\\xA9 un VPS (Linode de 512RAM) [http://www.linode.com/]\"\n',2,'2010-08-29 15:34:22'),(51,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita\\r\\n\\\n  \\r\\n\\\n  - Un servidor \\\"calato\\\" (barebones) listo para usar. Yo configur\\xC3\\xA9 un VPS (Linode de 512RAM) [http://www.linode.com/]\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita\\r\\n\\\n  \\r\\n\\\n  - Un servidor \\\"calato\\\" (barebones) listo para usar. Yo configur\\xC3\\xA9 un VPS [Linode de 512RAM] (http://www.linode.com/)\"\n',3,'2010-08-29 15:34:46'),(52,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita\\r\\n\\\n  \\r\\n\\\n  - Un servidor \\\"calato\\\" (barebones) listo para usar. Yo configur\\xC3\\xA9 un VPS [Linode de 512RAM] (http://www.linode.com/)\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode de 512RAM] (http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1\\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles. [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n\"\n',4,'2010-08-29 15:42:49'),(53,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode de 512RAM] (http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1\\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles. [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1\\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). \\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\"\n',5,'2010-08-29 15:44:41'),(54,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1\\r\\n\\\n  - http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). \\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm gemset create r3rc2 //rails 3 rc2\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',6,'2010-08-29 15:50:56'),(55,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm gemset create r3rc2 //rails 3 rc2\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',7,'2010-08-29 15:51:41'),(56,10,'Post','--- \nresumen: \n- \"Busco instalar Ruby on Rails 3rc y Ruby on Rails 2.3.8 para dos aplicaciones en un servidor para producci\\xC3\\xB3n\"\n- \"Busco instalar Ruby on Rails 3rc y Ruby on Rails 2.3.8 para dos aplicaciones en un servidor para producci\\xC3\\xB3n. Se usa Unicorn y Nignx en vez de Passenger y Apache\"\ntitulo: \n- \"Multiples RoR en producci\\xC3\\xB3n\"\n- \"Multiples RoR en producci\\xC3\\xB3n, con Unicorn y Nignx\"\n',8,'2010-08-29 15:53:01'),(57,10,'Post','--- \nresumen: \n- \"Busco instalar Ruby on Rails 3rc y Ruby on Rails 2.3.8 para dos aplicaciones en un servidor para producci\\xC3\\xB3n. Se usa Unicorn y Nignx en vez de Passenger y Apache\"\n- \"Busco instalar Ruby on Rails 3rc y Ruby on Rails 2.3.8 para dos aplicaciones en un servidor para producci\\xC3\\xB3n. Se usa Unicorn y Nginx en vez de Passenger y Apache\"\ntitulo: \n- \"Multiples RoR en producci\\xC3\\xB3n, con Unicorn y Nignx\"\n- \"Multiples RoR en producci\\xC3\\xB3n, con Unicorn y Nginx\"\ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Unicorn y Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n\\\n  <code>\\r\\n\\\n  user www-data;\\r\\n\\\n  worker_processes  4;\\r\\n\\\n  \\r\\n\\\n  error_log  /var/log/nginx/error.log;\\r\\n\\\n  pid        /var/run/nginx.pid;\\r\\n\\\n  \\r\\n\\\n  events {\\r\\n    worker_connections  1024;\\r\\n\\\n  }\\r\\n\\\n  \\r\\n\\\n  http {\\r\\n    include       /etc/nginx/mime.types;\\r\\n    default_type  application/octet-stream;\\r\\n\\\n  \\r\\n    access_log\\t/var/log/nginx/access.log;\\r\\n\\\n  \\r\\n    sendfile        on;\\r\\n    #tcp_nopush     on;\\r\\n\\\n  \\r\\n    #keepalive_timeout  0;\\r\\n    keepalive_timeout  10;\\r\\n    tcp_nodelay        on;\\r\\n\\\n  \\r\\n    gzip  on;\\r\\n    gzip_comp_level 2;\\r\\n    gzip_proxied any;\\r\\n    gzip_types      text/plain text/html text/css application/x-javascript text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n    include /etc/nginx/conf.d/*.conf;\\r\\n    include /etc/nginx/sites-enabled/*;\\r\\n\\\n  }\\r\\n\\\n  </code>\\r\\n\"\n',9,'2010-08-29 16:24:34'),(58,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Unicorn y Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n\\\n  <code>\\r\\n\\\n  user www-data;\\r\\n\\\n  worker_processes  4;\\r\\n\\\n  \\r\\n\\\n  error_log  /var/log/nginx/error.log;\\r\\n\\\n  pid        /var/run/nginx.pid;\\r\\n\\\n  \\r\\n\\\n  events {\\r\\n    worker_connections  1024;\\r\\n\\\n  }\\r\\n\\\n  \\r\\n\\\n  http {\\r\\n    include       /etc/nginx/mime.types;\\r\\n    default_type  application/octet-stream;\\r\\n\\\n  \\r\\n    access_log\\t/var/log/nginx/access.log;\\r\\n\\\n  \\r\\n    sendfile        on;\\r\\n    #tcp_nopush     on;\\r\\n\\\n  \\r\\n    #keepalive_timeout  0;\\r\\n    keepalive_timeout  10;\\r\\n    tcp_nodelay        on;\\r\\n\\\n  \\r\\n    gzip  on;\\r\\n    gzip_comp_level 2;\\r\\n    gzip_proxied any;\\r\\n    gzip_types      text/plain text/html text/css application/x-javascript text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n    include /etc/nginx/conf.d/*.conf;\\r\\n    include /etc/nginx/sites-enabled/*;\\r\\n\\\n  }\\r\\n\\\n  </code>\\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Unicorn y Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n\\\n  <blockquote>\\r\\n\\\n  user www-data;\\r\\n\\\n  worker_processes  4;\\r\\n\\\n  \\r\\n\\\n  error_log  /var/log/nginx/error.log;\\r\\n\\\n  pid        /var/run/nginx.pid;\\r\\n\\\n  \\r\\n\\\n  events {\\r\\n    worker_connections  1024;\\r\\n\\\n  }\\r\\n\\\n  \\r\\n\\\n  http {\\r\\n    include       /etc/nginx/mime.types;\\r\\n    default_type  application/octet-stream;\\r\\n\\\n  \\r\\n    access_log\\t/var/log/nginx/access.log;\\r\\n\\\n  \\r\\n    sendfile        on;\\r\\n    #tcp_nopush     on;\\r\\n\\\n  \\r\\n    #keepalive_timeout  0;\\r\\n    keepalive_timeout  10;\\r\\n    tcp_nodelay        on;\\r\\n\\\n  \\r\\n    gzip  on;\\r\\n    gzip_comp_level 2;\\r\\n    gzip_proxied any;\\r\\n    gzip_types      text/plain text/html text/css application/x-javascript text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n    include /etc/nginx/conf.d/*.conf;\\r\\n    include /etc/nginx/sites-enabled/*;\\r\\n\\\n  }\\r\\n\\\n  </blockquote>\\r\\n\"\n',10,'2010-08-29 16:25:11'),(59,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Unicorn y Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n\\\n  <blockquote>\\r\\n\\\n  user www-data;\\r\\n\\\n  worker_processes  4;\\r\\n\\\n  \\r\\n\\\n  error_log  /var/log/nginx/error.log;\\r\\n\\\n  pid        /var/run/nginx.pid;\\r\\n\\\n  \\r\\n\\\n  events {\\r\\n    worker_connections  1024;\\r\\n\\\n  }\\r\\n\\\n  \\r\\n\\\n  http {\\r\\n    include       /etc/nginx/mime.types;\\r\\n    default_type  application/octet-stream;\\r\\n\\\n  \\r\\n    access_log\\t/var/log/nginx/access.log;\\r\\n\\\n  \\r\\n    sendfile        on;\\r\\n    #tcp_nopush     on;\\r\\n\\\n  \\r\\n    #keepalive_timeout  0;\\r\\n    keepalive_timeout  10;\\r\\n    tcp_nodelay        on;\\r\\n\\\n  \\r\\n    gzip  on;\\r\\n    gzip_comp_level 2;\\r\\n    gzip_proxied any;\\r\\n    gzip_types      text/plain text/html text/css application/x-javascript text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n    include /etc/nginx/conf.d/*.conf;\\r\\n    include /etc/nginx/sites-enabled/*;\\r\\n\\\n  }\\r\\n\\\n  </blockquote>\\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Unicorn y Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\"\n',11,'2010-08-29 16:26:59'),(60,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Unicorn y Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual(debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/demo/public_html/domain1.com/log/access.log;\\r\\n                error_log /home/demo/public_html/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/demo/public_html/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',12,'2010-08-29 16:33:37'),(61,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). Se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar.\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Ahora instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual(debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/demo/public_html/domain1.com/log/access.log;\\r\\n                error_log /home/demo/public_html/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/demo/public_html/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com\\r\\n\\\n  \\r\\n\\\n  Ahora, le toca el turno a Unicorn. \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',13,'2010-08-29 16:52:09'),(62,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-r\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com\\r\\n\\\n  \\r\\n\\\n  Ahora, le toca el turno a Unicorn. \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  \\r\\n  wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n  worker_processes 2\\r\\n  working_directory wd\\r\\n\\\n  \\r\\n  # This loads the application in the master process before forking\\r\\n  # worker processes\\r\\n  # Read more about it here:\\r\\n  # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n  preload_app true\\r\\n\\\n  \\r\\n  timeout 30\\r\\n\\\n  \\r\\n  # This is where we specify the socket.\\r\\n  # We will point the upstream Nginx module to this socket later on\\r\\n  listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n  pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n  # Set the path of the log files inside the log folder of the testapp\\r\\n  stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n  stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n  before_fork do |server, worker|\\r\\n  # This option works in together with preload_app true setting\\r\\n  # What is does is prevent the master process from holding\\r\\n  # the database connection\\r\\n    defined?(ActiveRecord::Base) and\\r\\n      ActiveRecord::Base.connection.disconnect!\\r\\n  end\\r\\n\\\n  \\r\\n  after_fork do |server, worker|\\r\\n  # Here we are establishing the connection after forking worker\\r\\n  # processes\\r\\n    defined?(ActiveRecord::Base) and\\r\\n      ActiveRecord::Base.establish_connection\\r\\n  end\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',14,'2010-08-29 17:08:57'),(63,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n\\\n  \\r\\n  wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n  worker_processes 2\\r\\n  working_directory wd\\r\\n\\\n  \\r\\n  # This loads the application in the master process before forking\\r\\n  # worker processes\\r\\n  # Read more about it here:\\r\\n  # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n  preload_app true\\r\\n\\\n  \\r\\n  timeout 30\\r\\n\\\n  \\r\\n  # This is where we specify the socket.\\r\\n  # We will point the upstream Nginx module to this socket later on\\r\\n  listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n  pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n  # Set the path of the log files inside the log folder of the testapp\\r\\n  stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n  stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n  before_fork do |server, worker|\\r\\n  # This option works in together with preload_app true setting\\r\\n  # What is does is prevent the master process from holding\\r\\n  # the database connection\\r\\n    defined?(ActiveRecord::Base) and\\r\\n      ActiveRecord::Base.connection.disconnect!\\r\\n  end\\r\\n\\\n  \\r\\n  after_fork do |server, worker|\\r\\n  # Here we are establishing the connection after forking worker\\r\\n  # processes\\r\\n    defined?(ActiveRecord::Base) and\\r\\n      ActiveRecord::Base.establish_connection\\r\\n  end\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/mbacentrum.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',15,'2010-08-29 17:25:08'),(64,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/mbacentrum.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/mbacentrum.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',16,'2010-08-29 18:10:45'),(65,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/mbacentrum.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/mbacentrum.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',17,'2010-08-29 18:13:29'),(66,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM](http://rvm.beginrescueend.com/deployment/system-wide/). El RVM se instala desde root\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/mbacentrum.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',18,'2010-08-29 22:22:21'),(67,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  P.D. falta el iniciar y parar Unicorn, y la puesta en servicio (deploy) con Capistrano:\\r\\n\\\n  \\r\\n\\\n  http://github.com/blog/519-unicorn-god\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',19,'2010-08-31 13:33:43'),(68,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  P.D. falta el iniciar y parar Unicorn, y la puesta en servicio (deploy) con Capistrano:\\r\\n\\\n  \\r\\n\\\n  http://github.com/blog/519-unicorn-god\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  P.D. falta el iniciar y parar Unicorn, y la puesta en servicio (deploy) con Capistrano:\\r\\n\\\n  \\r\\n\\\n  http://github.com/blog/519-unicorn-god\\r\\n\\\n  \\r\\n\\\n  http://www.stopdropandrew.com/2010/06/01/where-unicorns-go-to-die-watching-unicorn-workers-with-monit.html\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',20,'2010-08-31 14:13:35'),(69,10,'Post','--- \ntexto: \n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  P.D. falta el iniciar y parar Unicorn, y la puesta en servicio (deploy) con Capistrano:\\r\\n\\\n  \\r\\n\\\n  http://github.com/blog/519-unicorn-god\\r\\n\\\n  \\r\\n\\\n  http://www.stopdropandrew.com/2010/06/01/where-unicorns-go-to-die-watching-unicorn-workers-with-monit.html\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n- \"La idea es tener diversas versions de Ruby on Rails, con sus respectivas gemas, para poder usar aplicaciones RoR2.3 y RoR 3 en un mismo servidor, evitando conflictos entre las gemas.\\r\\n\\\n  \\r\\n\\\n  \\xC2\\xBFC\\xC3\\xB3mo lograrlo?\\r\\n\\\n  \\r\\n\\\n  Para esto se necesita un servidor  listo para usar. Yo configur\\xC3\\xA9 un VPS  [Linode  de 512RAM](http://www.linode.com/) con Debian 5 Lenny 32 bits\\r\\n\\\n  \\r\\n\\\n  Luego, es bueno configurar el servidor con los pasos que existen en Articles.Slicehost.com:\\r\\n\\\n  \\r\\n\\\n  - [debian-lenny-setup-page-1](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-1)\\r\\n\\\n  - [debian-lenny-setup-page-2](http://articles.slicehost.com/2009/3/31/debian-lenny-setup-page-2)\\r\\n\\\n  \\r\\n\\\n  Tambi\\xC3\\xA9n instal\\xC3\\xA9 MySQL:\\r\\n\\\n  \\r\\n    sudo aptitude install mysql-server mysql-client libmysqlclient15-dev\\r\\n\\\n  \\r\\n\\\n  Luego, us\\xC3\\xA9 las instrucciones para instalar diversos rubies mediante  [RVM](http://rvm.beginrescueend.com/). Aqu\\xC3\\xAD el truco es instalar los Ruby en modo \\\"system wide\\\" para que est\\xC3\\xA9n disponibles:  [RVM system wide](http://rvm.beginrescueend.com/deployment/system-wide/).\\r\\n\\\n  \\r\\n\\\n  Luego, estas instrucciones [rvm-plays-nice-on-production](http://blog.injekt.net/9/rvm-plays-nice-on-production), desde el paso 7 hasta el final, terminar\\xC3\\xA1 con una buena instalaci\\xC3\\xB3n. En mi caso, mi usuario (ccastillo) permite instalar los distintos rubies. \\r\\n\\\n  \\r\\n\\\n  Luego, instalo el ruby que me interesa y preparo mi entorno inicial, RoR 3\\r\\n\\\n  Antes, es buena voz que, cuando instalamos las GEM, no se instalen los Ri docs ni los Rdocs, ocupan mucho tiempo en instalarse y no los vamos a consultar. Entonces, me conecto al server con mi usuario (ssh ccastillo@\\\"server\\\")\\r\\n\\\n  \\r\\n    sudo nano /etc/gemrc\\r\\n    Agregar la l\\xC3\\xADnea gem: --no-rdoc --no-ri\\r\\n\\\n  \\r\\n\\\n  Luego, instalar los Ruby que se deseen. Por ahora poner por defecto el 1.8.7\\r\\n\\\n  \\r\\n    rvm install 1.8.7\\r\\n    rvm install ree\\r\\n    rvm use 1.8.7 --default\\r\\n    rvm gemset create rails3rc\\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install rails --pre\\r\\n\\\n  \\r\\n\\\n  Por ahora he terminado con Ruby y con Rails. Instalamos Nginx en el servidor. Para instalar Nginx, basta un comando\\r\\n\\\n  \\r\\n    sudo aptitude install nginx\\r\\n\\\n  \\r\\n\\\n  Sin embargo, se instala la versi\\xC3\\xB3n 0.6.32. La \\xC3\\xBAltima versi\\xC3\\xB3n es la 0.7 y hasta la 0.8. Si deseas la \\xC3\\xBAltima versi\\xC3\\xB3n, te recomiendo [esta gu\\xC3\\xADa de Slicehost](http://articles.slicehost.com/2009/7/29/debian-lenny-installing-nginx-from-source)\\r\\n\\\n  \\r\\n\\\n  Ahora la configuraci\\xC3\\xB3n de Nginx con Unicorn. Como vamos a usar Nginx como pasarela (proxy) para canalizar las solicitudes Http a la aplicaci\\xC3\\xB3n Rails, la configuraci\\xC3\\xB3n que utilizo la tomo de [debian-lenny-nginx-configuration](http://articles.slicehost.com/2009/8/14/debian-lenny-nginx-configuration) inicialmente. Luego, la ajusto para seguir con esta gu\\xC3\\xADa: [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/)\\r\\n\\\n  \\r\\n\\\n  Entonces, primero sigo la gu\\xC3\\xADa de Slicehost para configurar nginx y ver que todo funciona. Me queda un archivo /etc/nginx/nginx.conf como este:\\r\\n\\\n  \\r\\n    user www-data;\\r\\n    worker_processes  4;\\r\\n    \\r\\n    error_log  /var/log/nginx/error.log;\\r\\n    pid        /var/run/nginx.pid;\\r\\n    \\r\\n    events {\\r\\n        worker_connections  1024;\\r\\n    }\\r\\n\\\n  \\r\\n    http {\\r\\n        include       /etc/nginx/mime.types;\\r\\n        default_type  application/octet-stream;\\r\\n        \\r\\n        access_log\\t/var/log/nginx/access.log;\\r\\n        \\r\\n        sendfile        on;\\r\\n        #tcp_nopush     on;\\r\\n        \\r\\n        #keepalive_timeout  0;\\r\\n        keepalive_timeout  10;\\r\\n        tcp_nodelay        on;\\r\\n        \\r\\n        gzip  on;\\r\\n        gzip_comp_level 2;\\r\\n        gzip_proxied any;\\r\\n        gzip_types      text/plain text/html text/css application/x-javascript     text/xml\\r\\n                    application/xml application/xml+rss text/javascript;\\r\\n\\\n  \\r\\n        include /etc/nginx/conf.d/*.conf;\\r\\n        include /etc/nginx/sites-enabled/*;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  Sigo ahora la gu\\xC3\\xADa para instalar un servidor virtual (debian-lenny-nginx-virtual-hosts-1)[http://articles.slicehost.com/2009/9/1/debian-lenny-nginx-virtual-hosts-1]. En s\\xC3\\xAD la gu\\xC3\\xADa nos dice que se configura un dominio virtual creando un archivo en /etc/nginx/sites-avaiable.\\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name  www.domain1.com;\\r\\n                rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n               }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n                listen   80;\\r\\n                server_name domain1.com;\\r\\n\\\n  \\r\\n                access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n                error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n\\\n  \\r\\n                location / {\\r\\n\\\n  \\r\\n                            root   /home/ccastillo/apps/domain1.com/public/;\\r\\n                            index  index.html;\\r\\n\\\n  \\r\\n                            }\\r\\n\\\n  \\r\\n                }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y luego habilito el sitio virtual con un link simb\\xC3\\xB3lico. Tambi\\xC3\\xA9n elimino el servidor \\\"default\\\", para evitarme problemas.\\r\\n\\\n  \\r\\n    sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com\\r\\n    sudo rm /etc/nginx/sites-enabled/default\\r\\n\\\n  \\r\\n\\\n  Reinicio Nginx y el nuevo sitio deber\\xC3\\xADa ser visible. (Previamente has configurado bien los DNS del dominio \\xC2\\xBFno?)\\r\\n\\\n  \\r\\n\\\n  En mi caso, estoy creando el dominio http://domain1.com, he apuntado el IP de mi server a ese dominio y he creado una aplicaci\\xC3\\xB3n de pruebas en /home/ccastillo/apps/domain1.com. He creado una aplicaci\\xC3\\xB3n de prueba y reiniciado el nginx, \\r\\n\\\n  \\r\\n    rails new domain1.com --database=mysql\\r\\n    sudo /etc/init.d/nginx restart\\r\\n\\\n  \\r\\n\\\n  Ya el sitio ser\\xC3\\xA1 visible en http://domain1.com. Se ha logrado configurar RVM, Rails 3 y nginx. Ahora, le toca el turno a Unicorn. Siguiendo con el usuario (ccastillo) y ruby 1.8.7 con las gemas de Rails3rc\\r\\n\\\n  \\r\\n    rvm 1.8.7@rails3rc\\r\\n    gem install unicorn\\r\\n\\\n  \\r\\n\\\n  Ahora sigo las gu\\xC3\\xADas de [configuring-nginx-and-unicorn](http://sleekd.com/general/configuring-nginx-and-unicorn/) modificando el archivo de configuraci\\xC3\\xB3n del dominio domain1.com:\\r\\n\\\n  \\r\\n\\\n  Primero, crear un archivo en la aplicaci\\xC3\\xB3n: config/unicorn.rb. Este archivo le dice al Rack de Rails que utilice Unicorn como webserver:\\r\\n\\\n  Modifica el wd (working directory) a donde est\\xC3\\xA9 tu aplicaci\\xC3\\xB3n.\\r\\n\\\n  \\r\\n    wd = \\\"/home/ccastillo/apps/mbacentrum.com\\\" \\r\\n    worker_processes 2\\r\\n    working_directory wd\\r\\n\\\n  \\r\\n    # This loads the application in the master process before forking\\r\\n    # worker processes\\r\\n    # Read more about it here:\\r\\n    # http://unicorn.bogomips.org/Unicorn/Configurator.html\\r\\n    preload_app true\\r\\n\\\n  \\r\\n    timeout 30\\r\\n\\\n  \\r\\n    # This is where we specify the socket.\\r\\n    # We will point the upstream Nginx module to this socket later on\\r\\n    listen \\\"#{wd}/tmp/sockets/unicorn.sock\\\", :backlog => 64\\r\\n\\\n  \\r\\n    pid \\\"#{wd}/tmp/pids/unicorn.pid\\\"\\r\\n\\\n  \\r\\n    # Set the path of the log files inside the log folder of the testapp\\r\\n    stderr_path \\\"#{wd}/log/unicorn.stderr.log\\\"\\r\\n    stdout_path \\\"#{wd}/log/unicorn.stdout.log\\\"\\r\\n\\\n  \\r\\n    before_fork do |server, worker|\\r\\n    # This option works in together with preload_app true setting\\r\\n    # What is does is prevent the master process from holding\\r\\n    # the database connection\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.connection.disconnect!\\r\\n    end\\r\\n\\\n  \\r\\n    after_fork do |server, worker|\\r\\n    # Here we are establishing the connection after forking worker\\r\\n    # processes\\r\\n      defined?(ActiveRecord::Base) and\\r\\n        ActiveRecord::Base.establish_connection\\r\\n    end\\r\\n\\\n  \\r\\n\\\n  Ahora le decimos a Nginx que utilice Unicorn como pasarela, modificando /etc/sites-avaiable/domain1.com que queda as\\xC3\\xAD:\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n    #servidor unicorn\\r\\n    upstream unicorn_domain1 {\\r\\n     # This is the socket we configured in unicorn.rb\\r\\n     server unix:/home/ccastillo/apps/domain1.com/tmp/sockets/unicorn.sock fail_timeout=0;\\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      listen 80;\\r\\n      server_name  www.domain1.com;\\r\\n      rewrite ^/(.*) http://domain1.com/$1 permanent;\\r\\n\\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n    server {\\r\\n\\\n  \\r\\n      # listen   80;\\r\\n      server_name domain1.com;\\r\\n      keepalive_timeout 5;\\r\\n  \\r\\n      access_log /home/ccastillo/apps/domain1.com/log/access.log;\\r\\n      error_log /home/ccastillo/apps/domain1.com/log/error.log;\\r\\n      root   /home/ccastillo/apps/domain1.com/public/;\\r\\n    \\r\\n      location / {\\r\\n\\\n  \\r\\n        #index  index.html;\\r\\n    \\r\\n        if (-f $request_filename) {\\r\\n          access_log off;\\r\\n          rewrite_log off;\\r\\n          expires 30d;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\\r\\n        proxy_set_header Host $host;\\r\\n        proxy_redirect off;\\r\\n\\\n  \\r\\n        if (!-f $request_filename) {\\r\\n          # my_web_app needs to be the same as whatever upstream name you assigned above\\r\\n          proxy_pass http://unicorn_domain1;\\r\\n          break;\\r\\n        }\\r\\n\\\n  \\r\\n      }\\r\\n\\\n  \\r\\n  \\r\\n    }\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  Y se inician el demonio Unicorn desde tu aplicaci\\xC3\\xB3n Rails. \\r\\n\\\n  \\r\\n    unicorn_rails -c config/unicorn.rb -D\\r\\n\\\n  \\r\\n\\\n  Si no arranca, ver los errores en \\\"cat log/unicorn.stderr.log\\\". En mi caso falt\\xC3\\xB3 un \\\"sudo aptitude install sqlite3 libsqlite3-dev\\\" y luego \\\"bundle install\\\". \\r\\n\\\n  Se instal\\xC3\\xB3 de una vez MySQL. Parece ser que Debian Lenny tiene un Sqlite muy antiguo y no funciona con la gema de Ruby.\\r\\n\\\n  \\r\\n\\\n  Hay que estar seguros que la aplicaci\\xC3\\xB3n Ruby on Rails funciona correctamente, revisando constantemente ese log de errores del Unicorn.\\r\\n\\\n  \\r\\n\\\n  Suerte!\\r\\n\\\n  \\r\\n\\\n  P.D. falta el iniciar y parar Unicorn, y la puesta en servicio (deploy) con Capistrano:\\r\\n\\\n  \\r\\n\\\n  http://github.com/blog/519-unicorn-god\\r\\n\\\n  \\r\\n\\\n  http://www.stopdropandrew.com/2010/06/01/where-unicorns-go-to-die-watching-unicorn-workers-with-monit.html\\r\\n\\\n  \\r\\n\\\n  Receta Capistrano para deploy con Unicorn:\\r\\n\\\n  \\r\\n\\\n  http://gist.github.com/393178\\r\\n\\\n  \\r\\n\\\n  Unicorn init script\\r\\n\\\n  http://gist.github.com/308216\\r\\n\\\n  \\r\\n\\\n  Github strategy http://github.com/blog/470-deployment-script-spring-cleaning\\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\\\n  \\r\\n\"\n',21,'2010-09-01 16:28:37');
/*!40000 ALTER TABLE `versions` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2011-04-14 22:12:42
